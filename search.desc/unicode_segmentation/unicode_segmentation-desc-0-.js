searchState.loadedDescShard("unicode_segmentation", 0, "Iterators which split strings on Grapheme Cluster, Word or …\nCursor-based segmenter for grapheme clusters.\nAn error return indicating that not enough content was …\nExternal iterator for grapheme clusters and byte offsets.\nExternal iterator for a string’s grapheme clusters.\nAn error returned when the chunk given does not contain …\nWhen requesting <code>next_boundary</code>, the cursor is moving past …\nMore pre-context is needed. The caller should call …\nWhen requesting <code>prev_boundary</code>, the cursor is moving past …\nThe version of Unicode that this version of …\nExternal iterator for sentence boundaries and byte offsets.\nExternal iterator for a string’s sentence boundaries.\nExternal iterator for word boundaries and byte offsets.\nExternal iterator for a string’s word boundaries.\nMethods for segmenting strings according to Unicode …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nThe current offset of the cursor. Equal to the last value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an iterator over the grapheme clusters of <code>self</code> and …\nReturns an iterator over the grapheme clusters of <code>self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine whether the current cursor location is a …\nCreate a new cursor. The string and initial offset are …\nFind the next boundary after the current cursor position. …\nFind the previous boundary after the current cursor …\nProvide additional pre-context when it is needed to decide …\nSet the cursor to a new location in the same string.\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over the words of <code>self</code>, separated on …\nReturns an iterator over the words of <code>self</code>, separated on …")