searchState.loadedDescShard("read_fonts", 0, "Reading OpenType tables\nAn array of nullable offsets that can be resolved on …\nAn array of offsets that can be resolved on access.\nA collection of fonts.\nReference to the content of a font collection file.\nA type that can compute its size at runtime, based on some …\nEmpty data, useful for some tests and examples\nReference to the content of a font or font collection file.\nA single font.\nA reference to raw binary font data.\nA type that can be read from raw table data.\nA trait for types that require external data in order to …\nReference to an in-memory font.\nReturn the minimum range of the table bytes\nAny offset type.\nA trait for a type that needs additional arguments to be …\nAn error that occurs when reading font data\nA helper trait providing a ‘resolve’ method for …\nA helper trait providing a ‘resolve’ method for offset …\nThe type of the first (length) field of the item.\nThe table’s tag.\nTTC Header\nThe OpenType Table Directory\nAn interface for accessing tables from a font (or …\nRecord for a table in a font.\nTyped access to raw table data.\nA table that has an associated tag.\nA trait for types that have variable length.\nPadding bytes before the start of the Top DICT.\nPadding bytes before the start of the Name INDEX.\nFont Vendor Identification.\nReturns the advance width for the given glyph identifier.\nReturns the advance height for the given glyph identifier.\nReturns the advance height delta for the specified glyph …\nAttempt to resolve <code>advance_height_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nMaximum advance height value in ‘vmtx’ table.\nReturns the advance width delta for the specified glyph …\nAttempt to resolve <code>advance_width_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nMaximum advance width value in ‘hmtx’ table.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 0.\nArray of alternate glyph IDs, in arbitrary order\nNumber of AlternateSet tables\nArray of offsets to AlternateSet tables. Offsets are from …\nA dynamically resolving wrapper for <code>alternate_set_offsets</code>.\nFormat identifier, = 2\nFormat identifier, = 1\nFormat identifier, = 3\nIndex to glyph contour point\nIndividual anchor points.\nReturns the set of anchor points for the given glyph.\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nCustom array types\nReturn the data as a byte slice\nTypographic ascent.\nTypographic ascent.\nAttempt to resolve <code>attach_list_offset</code>.\nOffset to attachment point list table, from beginning of …\nArray of offsets to AttachPoint tables-from beginning of …\nA dynamically resolving wrapper for <code>attach_point_offsets</code>.\nReturns the array of variation axis records.\nVariation axis record array.\nThe total number of axes contributing to this axis-values …\nThe number of variation axes for this font. This must be …\nThe number of variation axes in the font (the number of …\nThe number of variation axes for this font. This must be …\nThe number of variation axes for this font. This must be …\nIndex (zero-based) for the variation axis within the ‘…\nZero-base index into the axis record array identifying the …\nZero-base index into the axis record array identifying the …\nZero-base index into the axis record array identifying the …\nAttempt to resolve <code>axis_index_map_offset</code>.\nOffset to DeltaSetIndexMap table (may be NULL).\nFriendlier accessor than directly using raw data via Index2\nAttempt to resolve <code>axis_indices_list_offset</code>.\nAttempt to resolve <code>axis_instance_arrays_offset</code>.\nOffset in bytes from the beginning of the table to the …\nThe segment maps array — one segment map for each axis, …\nThe size in bytes of each VariationAxisRecord — set to …\nThe number of axis value tables.\nArray of offsets to axis value tables, in bytes from the …\nA dynamically resolving wrapper for <code>axis_value_offsets</code>.\nArray of AxisValue records that provide the combination of …\nAttempt to resolve <code>backdrop_paint_offset</code>.\nOffset to a backdrop Paint table.\nAttempt to resolve <code>backtrack_class_def_offset</code>.\nOffset to ClassDef table containing backtrack sequence …\nArray of offsets to coverage tables for the backtrack …\nArray of offsets to coverage tables in backtrack sequence, …\nA dynamically resolving wrapper for …\nA dynamically resolving wrapper for …\nNumber of glyphs in the backtrack sequence\nNumber of glyphs in the backtrack sequence.\nNumber of glyphs in the backtrack sequence\nNumber of glyphs in the backtrack sequence\nArray of backtrack-sequence classes\nArray of backtrack glyph IDs\nAttempt to resolve <code>base_array_offset</code>.\nOffset to BaseArray table, from beginning of MarkBasePos …\nNumber of BaseCoord tables defined — should equal …\nFormat identifier — format = 3\nFormat identifier — format = 2\nFormat identifier — format = 1\nArray of offsets to BaseCoord tables, from beginning of …\nIndex of contour point on the reference glyph\nA dynamically resolving wrapper for <code>base_coord_offsets</code>.\nNumber of BaseRecords\nAttempt to resolve <code>base_coverage_offset</code>.\nOffset to baseCoverage table, from beginning of MarkBasePos\nAttempt to resolve <code>base_glyph_list_offset</code>.\nOffset to BaseGlyphList table.\nAttempt to resolve <code>base_glyph_records_offset</code>.\nOffset to baseGlyphRecords array (may be NULL).\nNumber of BaseLangSysRecords defined — may be zero (0)\nArray of BaseLangSysRecords, in alphabetical order by …\nArray of BaseRecords, in order of baseCoverage Index.\nNumber of BaseScriptRecords defined\nAttempt to resolve <code>base_script_list_offset</code>.\nOffset to BaseScriptList table, from beginning of Axis …\nArray of BaseScriptRecords, in alphabetical order by …\nNumber of baseline identification tags in this text …\nAttempt to resolve <code>base_tag_list_offset</code>.\nOffset to BaseTagList table, from beginning of Axis table …\nAttempt to resolve <code>base_values_offset</code>.\nOffset to BaseValues table, from beginning of BaseScript …\nArray of 4-byte baseline identification tags — must be in\nReturns the index, encoding record and subtable for the …\nAll glyphs have the same metrics.\nAll glyphs have the same metrics; glyph data may be …\nBitmapSize records array.\nBitmapSize records array.\nReturns the bottom side bearing delta for the specified …\nAttempt to resolve <code>bsb_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nNumber of CaretValue tables for this ligature (components …\nThe amount by which a slanted highlight on a glyph needs …\nThe amount by which a slanted highlight on a glyph needs …\nUsed to calculate the slope of the cursor (rise/run); 1 for\nUsed to calculate the slope of the cursor (rise/run); 1 for\n0 for vertical caret, 1 for horizontal.\n0 for vertical caret, 1 for horizontal.\nFormat identifier-format = 3\nFormat identifier: format = 1\nFormat identifier: format = 2\nArray of offsets to CaretValue tables, from beginning of …\nContour point index on glyph\nA dynamically resolving wrapper for <code>caret_value_offsets</code>.\nx coordinate for the center of rotation. For variation, use\nx coordinate for the center of scaling.\nx coordinate for the center of scaling. For variation, use …\nx coordinate for the center of rotation.\nCenter x coordinate. For variation, use varIndexBase + 0.\nCenter x coordinate.\nx coordinate for the center of rotation.\nx coordinate for the center of rotation. For variation, use\nx coordinate for the center of scaling. For variation, use …\nx coordinate for the center of scaling.\ny coordinate for the center of scaling.\ny coordinate for the center of rotation.\ny coordinate for the center of rotation. For variation, use\ny coordinate for the center of scaling. For variation, use …\nCenter y coordinate.\ny coordinate for the center of rotation.\ny coordinate for the center of rotation. For variation, use\ny coordinate for the center of scaling.\nCenter y coordinate. For variation, use varIndexBase + 1.\ny coordinate for the center of scaling. For variation, use …\nTotal byte count, including this header; must be a …\nNumber of ChainedClassSequenceRule tables\nArray of offsets to ChainedClassSequenceRule tables, from …\nNumber of ChainedClassSequenceRuleSet tables\nArray of offsets to ChainedClassSequenceRuleSet tables, …\nA dynamically resolving wrapper for …\nA dynamically resolving wrapper for …\nNumber of ChainedSequenceRule tables\nArray of offsets to ChainedSequenceRule tables, from …\nNumber of ChainedSequenceRuleSet tables\nArray of offsets to ChainedSeqRuleSet tables, from …\nA dynamically resolving wrapper for …\nA dynamically resolving wrapper for …\nThe count of characters for which this feature provides …\nThe Unicode Scalar Value of the characters for which this …\nChecksum for the table.\nChecksum for the table.\nTo compute: set it to 0, sum the entire font as uint32, …\nNumber of classes in classDef1 table — includes Class 0.\nArray of Class1 records, ordered by classes in classDef1.\nNumber of classes in classDef2 table — includes Class 0.\nThe class codes (indexed by glyph index minus firstGlyph). …\nAttempt to resolve <code>class_def_offset</code>.\nAttempt to resolve <code>class_def1_offset</code>.\nOffset to ClassDef table, from beginning of PairPos …\nAttempt to resolve <code>class_def2_offset</code>.\nOffset to ClassDef table, from beginning of PairPos …\nOffset to ClassDef table, from beginning of …\nFormat identifier — format = 1\nFormat identifier — format = 2\nNumber of ClassRangeRecords\nArray of ClassRangeRecords — ordered by startGlyphID\nNumber of ClassSequenceRule tables\nArray of offsets to ClassSequenceRule tables, from …\nNumber of ClassSequenceRuleSet tables\nArray of offsets to ClassSequenceRuleSet tables, from …\nA dynamically resolving wrapper for …\nA dynamically resolving wrapper for <code>class_seq_rule_offsets</code>.\nAttempt to resolve <code>class_table_offset</code>.\nAttempt to resolve <code>class_table_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nArray of Class Values — one per glyph ID\nAttempt to resolve <code>clip_list_offset</code>.\nOffset to ClipList table (may be NULL).\nClip records. Sorted by startGlyphID.\nReturn the set of glyphs reachable from the input set via …\nUpdate the set of lookup indices with all lookups …\nUpdate the set of lookup indices with all lookups …\nReturn a set of all feature indices underneath the …\nReturn a set of all feature indices underneath the …\nReturn a set of lookups referenced by the specified …\nReturn a set of lookups referenced by the specified …\nData structures useful for font work.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nOffset to VarColorLine table.\nOffset to ColorLine table.\nOffset to ColorLine table.\nOffset to ColorLine table.\nOffset to VarColorLine table.\nOffset to VarColorLine table.\nIndex of each palette’s first color record in the …\nAttempt to resolve <code>color_records_array_offset</code>.\nOffset from the beginning of CPAL table to the first …\nAllows for variations.\nNumber of components in the ligature\nNumber of ComponentRecords in this ligature\ncomponent flag glyph index of component\nArray of component glyph IDs — start with the second …\nReturns an iterator that yields the glyph identifier and …\nArray of Component records, ordered in writing direction.\nReturns an iterator over the components of the composite …\nA CompositeMode enumeration value.\nComputes the delta value for the specified index and set …\nComputes the delta value in floating point for the …\nCompute the number of bytes required to represent this …\nAttempt to resolve <code>condition_offset</code>.\nNumber of conditions.\nNumber of conditions for this condition set.\nNumber of conditions.\nAttempt to resolve <code>condition_list_offset</code>.\nCondition to negate.\nArray of offsets to condition tables, from beginning of the\nArray of condition tables for this disjunction (OR) …\nArray of condition tables for this conjunction (AND) …\nA dynamically resolving wrapper for <code>condition_offsets</code>.\nA dynamically resolving wrapper for <code>condition_offsets</code>.\nA dynamically resolving wrapper for <code>condition_offsets</code>.\nA dynamically resolving wrapper for <code>condition_offsets</code>.\nX or Y value, in design units\nX or Y value, in design units\nX or Y value, in design units\nX or Y value, in design units\nX or Y value, in design units\nReturn the cost of looking up a glyph in this table\nReturn the cost of looking up a glyph in this table\nReturn the cost of looking up a glyph in this table\nReturn the cost of looking up a glyph in this table\nNumber of objects stored in INDEX.\nNumber of objects stored in INDEX.\nNumber of name records.\nReturns the component count and TrueType interpreter …\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nCircumstances under which this table is used.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nCoverage flags and subtable type.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nCircumstances under which this table is used.\nCircumstances under which this table is used.\nAttempt to resolve <code>coverage_offset</code>.\nFormat identifier — format = 2\nFormat identifier — format = 1\nOffset to Coverage table - from beginning of AttachList …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table, from beginning of CursivePos …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table, from beginning of SinglePos …\nOffset to Coverage table, from beginning of …\nOffset to Coverage table, from beginning of PairPos …\nOffset to Coverage table, from beginning of …\nOffset to Coverage table, from beginning of PairPos …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table - from beginning of LigCaretList …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table, from beginning of SinglePos …\nOffset to Coverage table, from beginning of substitution …\nOffset to Coverage table, from beginning of …\nOffset to Coverage table, from beginning of …\nArray of offsets to Coverage tables, from beginning of …\nArray of offsets to mark glyph set coverage tables, from …\nA dynamically resolving wrapper for <code>coverage_offsets</code>.\nA dynamically resolving wrapper for <code>coverage_offsets</code>.\nNumber of seconds since 12:00 midnight that started …\nReturns the array of entries for the control value table …\nReturns the array of entries for the control value table …\nData for specific subtable.\nArray containing the object data.\nSubtable specific data.\nThe actual embedded graphic data. The total length is …\nSubtable specific data.\nArray containing the object data.\nSubtable specific data.\nAttempt to resolve <code>data_offset</code>.\nReturns the underlying font data.\nReturn the raw data for this gid.\nArray of data map records.\nThe number of data maps in the table.\nOffset from the start of the ‘cvar’ table to the …\nIndex number of default baseline for this script — equals\nThe default specification for subtables.\nAttempt to resolve <code>default_lang_sys_offset</code>.\nOffset to default LangSys table, from beginning of Script …\nAttempt to resolve <code>default_min_max_offset</code>.\nOffset to MinMax table, from beginning of BaseScript table …\nValue at default instance.\nThe y coordinate of a glyph’s vertical origin, in the …\nFormat, = 0x8000\nFormat of deltaValue array data: 0x0001, 0x0002, or 0x0003\nAdd to original glyph ID to get substitute glyph ID\nthe length of one delta set\nRead a specific delta set.\nReturns an iterator over the per-region delta values for …\nA delta-set inner index — used to select a delta-set row …\nA delta-set outer index — used to select an item …\nDelta-set rows.\nAn Index2 where each item is a PackedDeltas\nArray of compressed data\nComputes the accumulated deltas for the given set of …\nTypographic descent.\nTypographic descent.\nAttempt to resolve <code>design_axes_offset</code>.\nOffset in bytes from the beginning of the STAT table to the\nThe number of axis records. In a font with an ‘fvar’ …\nThe size in bytes of each axis record.\nThe first value represents the design size in 720/inch …\nAttempt to resolve <code>device_offset</code>.\nAttempt to resolve <code>device_offset</code>.\nOffset to Device table (non-variable font) / Variation …\nOffset to Device table (non-variable font) / Variation …\nArray of SVGDocumentRecords.\nThe length (in bytes) of the DSIG table (null if no …\nThe length (in bytes) of the DSIG table (null if no …\nThe offset (in bytes) of the DSIG table from the beginning …\nThe offset (in bytes) of the DSIG table from the beginning …\nTag indicating that a DSIG table exists, 0x44534947 (‘…\nTag indicating that a DSIG table exists, 0x44534947 (‘…\nTranslation in x direction. For variation, use …\nTranslation in x direction.\nTranslation in x direction. For variation, use …\nTranslation in x direction.\nTranslation in y direction.\nTranslation in y direction. For variation, use …\nTranslation in y direction. For variation, use …\nTranslation in y direction.\nName ID used as fallback when projection of names into a …\nEnd of the angular range of the gradient, 180° in …\nEnd of the angular range of the gradient, 180° in …\nEnd characterCode for each segment, last=0xFFFF.\nArray of point indices for the last point of each contour, …\nLargest size to correct, in ppem\nValues, indexed by glyph index.\nNumber of character codes in subrange.\nNumber of EntryExit records\nArray of EntryExit records, in Coverage index order.\nA packed field that describes the compressed …\nA packed field that describes the compressed …\nLog2 of the maximum power of 2 less than or equal to …\nThe log base 2 of the largest power of 2 less than or …\nThis is calculated as log2 of the largest power of two …\nThe log base 2 of the largest power of 2 less than or …\nThe log base 2 of the largest power of 2 less than or …\nThis is calculated as log2 of the largest power of two …\nAttempt to resolve <code>entry_table_offset</code>.\nAttempt to resolve <code>entry_table_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nAn Extend enum value.\nAn Extend enum value.\nAttempt to resolve <code>extension_offset</code>.\nAttempt to resolve <code>extension_offset</code>.\nLookup type of subtable referenced by extensionOffset …\nLookup type of subtable referenced by extensionOffset …\nOffset to the extension subtable, of lookup type …\nOffset to the extension subtable, of lookup type …\nFD selector array (one entry for each glyph).\nNumber of FeatMinMaxRecords — may be zero (0)\nArray of FeatMinMaxRecords, in alphabetical order by …\nThe ‘name’ table name ID that specifies a string (or …\nThe ‘name’ table name ID that specifies a string (or …\nNumber of FeatureRecords in this table\nNumber of feature index values for this language system —\nIf the language system references a feature with the given …\nArray of indices into the FeatureList, in arbitrary order\nAttempt to resolve <code>feature_list_offset</code>.\nAttempt to resolve <code>feature_list_offset</code>.\nOffset to FeatureList table, from beginning of GPOS table\nOffset to FeatureList table, from beginning of GSUB table\nThe number of entries in the feature name array.\nAttempt to resolve <code>feature_params_offset</code>.\nOffset from start of Feature table to FeatureParams table, …\nArray of FeatureRecords — zero-based (first feature has …\nNumber of feature variation records.\nArray of feature variation records.\nAttempt to resolve <code>feature_variations_offset</code>.\nAttempt to resolve <code>feature_variations_offset</code>.\nOffset to FeatureVariations table, from beginning of the …\nFeature entries for this chain.\nMaximum value of the font variation instances that satisfy …\nMinimum value of the font variation instances that satisfy …\nReturns the name for the given feature code.\nFirst character code of subrange.\nFirst glyph in class range.\nGlyph index of the first glyph in the class table.\nFirst glyph index included in the trimmed array.\nFirst glyph index included in the trimmed array.\nIndex (base 0) into the LayerList.\nThe first ‘name’ table name ID used to specify strings …\nTable flags; currently none defined.\nFlags (currently unused; set to zero).\nSee the flags enum.\nPermission flags\nBit 0: Set to 1. Bit 1: Draw outlines. Bits 2 to 15: …\nSet to zero (reserved for future use).\nFlags — currently unused; set to 0.\nFlags — see below for details.\nFlags — see below for details.\nFlags — see below for details.\nBit-field that gives the format of the offset array that …\nFlags — see below for details.\nDeprecated (Set to 2).\nSet by font manufacturer.\nReturns an iterator over the fonts contained in the file.\nReturns an iterator over all of the available fonts in the …\nSet to 1.\nSet to 30.\nFormat, = 2\nSet to 21.\nFormat, = 3\nFormat number is set to 2.\nFormat number is set to 8.\nFormat, = 1\nFormat number is set to 10.\nFormat number is set to 4.\nSet to 20.\nSet to 19.\nSet to 18.\nSet to 17.\nSet to 16.\nSet to 15.\nFormat of the tracking table (set to 0).\nSet to 23.\nSet to 14.\nFormat identifier: format = 3\nFormat, = 4\nFormat number is set to 6.\nSet to 13.\nSet to 12.\nFormat number is set to 6.\nFormat identifier == 1\nSet to 11.\nFormat, = 5\nSet to 24.\nDeltaSetIndexMap format: set to 0.\nSet to 1.\nFormat identifier — set to 4.\nSet to 2.\nSubtable format; set to 8.\nFormat number is set to 0.\nSet to 1.\nSet to 25.\nSet to 2.\nSet to 3.\nDeltaSetIndexMap format: set to 1.\nSubtable format; set to 10.\nFormat number is set to 0.\nFormat identifier: format = 2\nSet to 4.\nSet to 32.\nSet to 26.\nFormat identifier — set to 3.\nFormat— set to 1\nSubtable format; set to 12.\nSet to 10.\nFormat identifier: format = 1\nFormat = 0.\nSet to 27.\nSet to 5.\nFormat identifier: format = 1\nFormat number is set to 4.\nFormat identifier — set to 2.\nFormat identifier — set to 1.\nSubtable format; set to 13.\nFormat number is set to 2.\nSet to 9.\nFormat number is set to 0.\nFormat identifier: format = 3\nFormat = 3.\nSet to 28.\nSet to 29.\nSet to 31.\nSet to 8.\nFormat; =2\nSet to 7.\nFormat; =1\nSubtable format. Set to 14.\nFormat identifier: format = 2\nSet to 6.\nFormat = 4.\nFormat; =0\nSet to 22.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new reference to an in-memory font at the …\nFont selection flags.\nType flags.\nSorted by ppem\nResolve the offset at the provided index.\nResolve the offset at the provided index.\nReturns the data for the object at the given index.\nIf this glyph is in the coverage table, returns its index\nGet the class for this glyph id\nReturns the data for the object at the given index.\nReturns the tag and script at the given index.\nGet the class for this glyph id\nIf this glyph is in the coverage table, returns its index\nReturns the tag and feature at the given index.\nReturns the font in the collection at the specified index.\nReturns the offset of the object at the given index.\nReturns the offset of the object at the given index.\nFriendlier accessor than directly using raw data via Index2\nGlyph name array.\nOne per glyph, sorted by glyhph ID.\nOne per glyph.\nArray of glyph IDs — in numerical order\nAttempt to resolve <code>glyph_class_def_offset</code>.\nOffset to class definition table for glyph type, from …\nNumber of glyphs with attachment points\nThe number of glyphs in this font. This must match the …\nNumber of glyph IDs in the alternateGlyphIDs array\nNumber of glyphs in the glyph array\nNumber of glyph IDs in the substituteGlyphIDs array.\nNumber of glyphs in the input glyph sequence\nTotal number of glyphs (equivalent to the last glyph minus …\nNumber of glyphs in the input sequence\nNumber of glyphs to be matched\nTotal number of glyphs (equivalent to the last glyph minus …\nNumber of glyph IDs in the substituteGlyphIDs array. This …\nSize of the classValueArray\nNumber of glyph IDs in the substituteGlyphIDs array\nThe number of glyphs in this font.\nthe raw data for flags &amp; x/y coordinates\nGet the raw data of the SVG document. Is not guaranteed to …\n0 for current format.\nOffset from the beginning of the strike data header to …\nOffset to the glyph data table.\nGlyph ID for the source outline.\nGlyph ID for a BaseGlyphList base glyph.\nArray of glyph indices for the character codes covered\nArray of glyph index values for character codes in the …\nAn array that maps character codes to glyph index values.\nGlyph index array (arbitrary length)\nArray of indices into the string data. See below for …\nGet the variation data for a specific glyph.\nOffset from the start of this table to the array of …\nOffsets from the start of the GlyphVariationData array to …\nIndicates the format of the embedded graphic data: one of …\nArray of SequentialMapGroup records.\nArray of SequentialMapGroup records.\nArray of ConstantMapGroup records.\nPaired advance width/height and left/top side bearing …\nReturns true if the contours in the simple glyph may …\nHeader size (bytes).\nHeader size (bytes).\nAttempt to resolve <code>horiz_offset</code>.\nAttempt to resolve <code>horiz_axis_offset</code>.\nOffset to horizontal Axis table, from beginning of BASE …\nOffset from start of tracking table to TrackData for …\nDelta for all character codes in segment.\nOffsets into glyphIdArray or 0\nThe second value has no independent meaning, but serves as …\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nAll the glyphs are of the same size.\nAll glyphs have the same data size.\nReturns the index of the script with the given tag.\nReturns the index of the given language tag.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nArray of IndexSubtableRecords.\n0 for short offsets (Offset16), 1 for long (Offset32).\nAttempt to resolve <code>input_class_def_offset</code>.\nOffset to ClassDef table containing input sequence context,\nArray of offsets to coverage tables for the input sequence\nA dynamically resolving wrapper for <code>input_coverage_offsets</code>.\nTotal number of glyphs in the input sequence\nNumber of glyphs in the input sequence\nNumber of glyphs in the input sequence\nArray of input glyph IDs—starting with the second glyph\nArray of input glyph IDs—start with second glyph\nArray of input sequence classes, beginning with the second …\nSequence of classes to be matched to the input glyph …\nThe number of named instances defined in the font (the …\nThe size in bytes of each InstanceRecord — set to either …\nInstance record array.\nReturns the array of instance records.\nTotal number of bytes for instructions. If …\nArray of instruction byte code for the glyph.\nReturns the TrueType interpreter instructions.\nIntermediate end tuple record for this tuple variation …\nIntermediate start tuple record for this tuple variation …\nIntermediate tuple records for this tuple variation table …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTightly packed array of bits (8K bytes total) indicating …\nIf true, this subtable will be applied to both horizontal …\nIf true, this subtable will process glyphs in descending …\nTrue if the table has cross-stream kerning values.\n<code>true</code> if the data has a length of zero bytes.\n<code>true</code> if the array is empty\n<code>true</code> if the array is empty\nReturns true if the collection is empty.\nSet to 0 if the font is proportionally spaced, non-zero if …\nTrue if the table has horizontal kerning values.\nIf true, this subtable will process glyphs in logical …\nTrue if the table has variation kerning values.\nIf true, this subtable will only be applied to vertical …\nTrue if the table has vertical kerning values.\nItalic angle in counter-clockwise degrees from the …\nThe number of delta sets for distinct items.\nAttempt to resolve <code>item_var_store_offset</code>.\nAttempt to resolve <code>item_var_store_offset</code>.\nOffset to Item Variation Store table, from beginning of …\nOffset to the Item Variation Store table, from beginning of\nA dynamically resolving wrapper for …\nThe number of item variation data subtables.\nOffsets in bytes from the start of the item variation …\nAttempt to resolve <code>item_variation_store_offset</code>.\nAttempt to resolve <code>item_variation_store_offset</code>.\nAttempt to resolve <code>item_variation_store_offset</code>.\nAttempt to resolve <code>item_variation_store_offset</code>.\nOffset in bytes from the start of this table to the item …\nOffset to ItemVariationStore (may be NULL).\nOffset in bytes from the start of this table to the item …\nOffset in bytes from the start of this table to the item …\nIterate over all of the offset targets.\nIterate over all of the offset targets.\nReturns an iterator over all (codepoint, selector, mapping …\nReturns an iterator over all (codepoint, glyph identifier) …\nIterate over the decoded values for this device\nReturns an iterator over all (codepoint, glyph identifier) …\nIterate over each glyph and its class.\nIterate over each glyph and its class.\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over the fonts in the collection.\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over all (codepoint, glyph identifier) …\nThe indices into the kernValue array.\nThe kerning values.\nThe number of kerning values.\nReturns the kerning adjustment for the given pair.\nReturns the kerning adjustment for the given pair.\nReturns the kerning adjustment for the given pair.\nReturns an enum representing the actual subtable data.\nReturns an enum representing the actual subtable data.\nReturns the language system with the given index.\nNumber of LangSysRecords for this script — excluding the …\nIf the script contains a language system with the given …\nArray of LangSysRecords, listed alphabetically by LangSys …\nNumber of language-tag records.\nThe language-tag records where langTagCount is the number …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nAttempt to resolve <code>layer_list_offset</code>.\nOffset to LayerList table (may be NULL).\nAttempt to resolve <code>layer_records_offset</code>.\nOffset to layerRecords array (may be NULL).\nThe left-hand classes.\nThe number of left-hand classes.\nLeading (left/top) side bearings for glyph IDs greater …\nThe length of the data, in bytes\nThe number of offsets in the array\nThe number of offsets in the array\nReturns the number of fonts in the collection.\nThis is the length in bytes of the subtable.\nThis is the length in bytes of the subtable.\nThis is the length in bytes of the subtable.\nTotal subtable length, including this header.\nThe length of this subtable in bytes, including this …\nByte length of this subtable (including the header)\nThe length of this subtable in bytes, including this …\nByte length of this subtable (including the header)\nByte length of this subtable (including this header)\nThis is the length in bytes of the subtable.\nThe length of this subtable in bytes, including this …\nByte length of this subtable (including the header)\nByte length of this subtable (including the header)\nLength of the table.\nLength of the table.\nAttempt to resolve <code>lig_caret_list_offset</code>.\nOffset to ligature caret list table, from beginning of GDEF\nNumber of ligature glyphs\nArray of offsets to LigGlyph tables, from beginning of …\nA dynamically resolving wrapper for <code>lig_glyph_offsets</code>.\nAttempt to resolve <code>ligature_array_offset</code>.\nOffset to LigatureArray table, from beginning of MarkLigPos\nArray of offsets to LigatureAttach tables. Offsets are from\nA dynamically resolving wrapper for <code>ligature_attach_offsets</code>…\nNumber of LigatureAttach table offsets\nNumber of Ligature tables\nAttempt to resolve <code>ligature_coverage_offset</code>.\nOffset to ligatureCoverage table, from beginning of …\nglyph ID of ligature to substitute\nArray of offsets to Ligature tables. Offsets are from …\nNumber of LigatureSet tables\nArray of offsets to LigatureSet tables. Offsets are from …\nA dynamically resolving wrapper for <code>ligature_set_offsets</code>.\nA dynamically resolving wrapper for <code>ligature_offsets</code>.\nTypographic line gap. Negative LineGap values are treated …\nTypographic line gap. Negative LineGap values are treated …\nThe numeric value for a style-linked mapping from this …\nis_long can be optionally provided, if known, otherwise we …\nis_long can be optionally provided, if known, otherwise we …\nAttempt to resolve <code>lookahead_class_def_offset</code>.\nOffset to ClassDef table containing lookahead sequence …\nArray of offsets to coverage tables for the lookahead …\nArray of offsets to coverage tables in lookahead sequence, …\nA dynamically resolving wrapper for …\nA dynamically resolving wrapper for …\nNumber of glyphs in lookahead sequence.\nNumber of glyphs in the lookahead sequence\nNumber of glyphs in the lookahead sequence\nNumber of glyphs in the lookahead sequence\nArray of lookahead glyph IDs\nArray of lookahead-sequence classes\nNumber of lookups in this table\nLookup qualifiers\nNumber of LookupList indices for this feature\nAttempt to resolve <code>lookup_list_offset</code>.\nAttempt to resolve <code>lookup_list_offset</code>.\nArray of indices into the LookupList — zero-based (first …\nOffset to LookupList table, from beginning of GPOS table\nOffset to LookupList table, from beginning of GSUB table\nArray of offsets to Lookup tables, from beginning of …\nAttempt to resolve <code>lookup_table_offset</code>.\nOffset to the table’s lookup table; currently this is …\nDifferent enumerations for GSUB and GPOS\nA dynamically resolving wrapper for <code>lookup_offsets</code>.\nSmallest readable size in pixels.\nReturns the left side bearing delta for the specified …\nAttempt to resolve <code>lsb_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nBits identifying the font’s style; see MacStyle\nSet to 0x5F0F3CF5.\nFormat major version (starting at 1).\nFormat major version (set to 2).\nMajor version of the EBLC table, = 2.\nMajor version of the CBDT table, = 3.\nMajor version of the EBDT table, = 2.\nMajor version of the CBLC table, = 3.\nMaps a codepoint to a nominal glyph identifier.\nMaps a codepoint to a nominal glyph identifier.\nMaps a codepoint to a nominal glyph identifier.\nMap a codepoint to a nominal glyph identifier\nThe number of mapping entries.\nThe number of mapping entries.\nThe delta-set index mapping data. See details below.\nThe delta-set index mapping data. See details below.\nMaps a codepoint and variation selector to a nominal glyph …\nAttempt to resolve <code>mark1_array_offset</code>.\nOffset to MarkArray table for mark1, from beginning of …\nAttempt to resolve <code>mark1_coverage_offset</code>.\nOffset to Combining Mark Coverage table, from beginning of …\nAttempt to resolve <code>mark2_array_offset</code>.\nOffset to Mark2Array table for mark2, from beginning of …\nNumber of Mark2 records\nAttempt to resolve <code>mark2_coverage_offset</code>.\nOffset to Base Mark Coverage table, from beginning of …\nArray of Mark2Records, in Coverage order.\nAttempt to resolve <code>mark_array_offset</code>.\nAttempt to resolve <code>mark_array_offset</code>.\nOffset to MarkArray table, from beginning of MarkBasePos …\nOffset to MarkArray table, from beginning of MarkLigPos …\nAttempt to resolve <code>mark_attach_class_def_offset</code>.\nOffset to class definition table for mark attachment type, …\nNumber of Combining Mark classes defined\nNumber of classes defined for marks\nNumber of defined mark classes\nNumber of MarkRecords\nAttempt to resolve <code>mark_coverage_offset</code>.\nAttempt to resolve <code>mark_coverage_offset</code>.\nOffset to markCoverage table, from beginning of MarkBasePos\nOffset to markCoverage table, from beginning of MarkLigPos …\nIndex (base 0) into GDEF mark glyph sets structure. This …\nNumber of mark glyph sets defined\nAttempt to resolve <code>mark_glyph_sets_def_offset</code>.\nOffset to the table of mark glyph set definitions, from …\nArray of MarkRecords, ordered by corresponding glyphs in …\nMaximum levels of recursion; 1 for simple components.\nMaximum number of components referenced at “top level” …\nMaximum contours in a composite glyph.\nMaximum points in a composite glyph.\nMaximum contours in a non-composite glyph.\nAttempt to resolve <code>max_coord_offset</code>.\nOffset to BaseCoord table that defines maximum extent …\nNumber of FDEFs, equal to the highest function number + 1.\nNumber of IDEFs.\nMaximum memory usage when an OpenType font is downloaded …\nMaximum memory usage when an OpenType font is downloaded.\nMaximum points in a non-composite glyph.\nMaximum byte count for glyph instructions.\nMaximum stack depth across Font Program (‘fpgm’ …\nNumber of Storage Area locations.\nMaximum points used in Z0.\n1 if instructions do not use the twilight zone (Z0), or 2 …\n0 for current format.\n0 for current format.\nReturns the metric delta for the specified tag and …\nMinimum bottom sidebearing value\nReturn the minimum byte range of this table\nAttempt to resolve <code>min_coord_offset</code>.\nOffset to BaseCoord table that defines the minimum extent …\nMinimum left sidebearing value in ‘hmtx’ table for …\nMinimum memory usage when an OpenType font is downloaded …\nMinimum memory usage when an OpenType font is downloaded.\nMinimum right sidebearing value; calculated as min(aw - …\nReturn the minimum bytes of this table\nMinimum top sidebearing value in ‘vmtx’ table for …\nFormat minor version (starting at 0).\nMinor version of CBLC table, = 0.\nFormat minor version (set to 0).\nMinor version of CBDT table, = 0.\nMinor version of EBLC table, = 0.\nMinor version of EBDT table, = 0.\nNumber of seconds since 12:00 midnight that started …\nAttempt to resolve <code>multi_var_store_offset</code>.\nNumber of metamorphosis chains contained in this table.\nNumber of classes, which is the number of 16-bit entry …\nNumber of feature subtable entries.\nNumber of glyph in class range.\nNumber of glyphs in class table.\nThe number of kerning pairs in this subtable.\nThe number of kerning pairs in this subtable.\nNumber of ranges.\nNumber of ranges.\nNumber of point sizes included in this table.\nThe number of subtables in the chain.\nThe number of subtables included in the extended kerning …\nNumber of subtables in the kerning table.\nThe number of subtables included in the kerning table.\nNumber of separate tracks included in this table.\nNumber of units of the preceding size to be searched.\nNumber of units of the preceding size to be searched.\nNumber of units of the preceding size to be searched.\nThe third value enables applications to use a single name …\nThe name records where count is the number of records.\nThe feature name array, sorted by feature type.\nCreate a new <code>FontData</code> with these bytes.\nCreates a new reference to a file representing a font or …\nCreates a new reference to a font collection.\nCreates a new reference to an in-memory font backed by the …\nA nominal numeric value for this attribute value.\nNumber of BaseGlyph records; may be 0 in a version 1 table.\nNumber of character codes covered\nNumber of Clip records.\nTotal number of color records, combined for all palettes.\nNumber of SVGDocumentRecords. Must be non-zero.\nNumber of fonts in TTC\nNumber of fonts in TTC\nArray length.\nThe number of glyphs in the font.\nArray length.\nNumber of glyphs (this should be the same as numGlyphs in …\nNumber of groupings which follow\nNumber of groupings which follow\nNumber of groupings which follow\nNumber of Layer records; may be 0 in a version 1 table.\nNumber of offsets to paint tables to read from LayerList.\nNumber of named parameters. (May be zero.)\nThe number of glyph names covered by this table\nNumber of palette entries in each palette.\nNumber of palettes in the table.\nReturns the total number of points.\nNumber of anchor points for this glyph.\nNumber of records to follow\nNumber of device records.\nNumber of signatures in the table\nNumber of BitmapSize records.\nNumber of BitmapSize records.\nNumber of ColorStop records.\nNumber of ColorStop records.\nNumber of bitmap strikes.\nNumber of encoding tables that follow.\nNumber of tables.\nNumber of tables.\nNumber of language tags which follow.\nNumber of Unicode character ranges.\nNumber of variation Selector Records\nNumber of elements in the vertOriginYMetrics array.\nIf the number of contours is greater than or equal to zero,\nIf the number of contours is greater than or equal to zero,\nNumber of hMetric entries in ‘hmtx’ table\nNumber of advance heights in the vertical metrics (<code>vmtx</code>) …\nObject array element size.\nAbsolute offset size.\nObject array element size.\nOffset from the beginning of the font data.\nOffset from the beginning of the font data.\nReturn a reference to this table’s raw data.\nOffset in bytes from the beginning of the STAT table to the\nAttempt to resolve <code>offset_to_axis_value_offsets</code>.\nBytes containing <code>count + 1</code> offsets each of <code>off_size</code>.\nBytes containing <code>count + 1</code> offsets each of <code>off_size</code>.\nThe offsets array for all of the glyphs in the range.\nThe horizontal (x-axis) position of the left edge of the …\nThe vertical (y-axis) position of the bottom edge of the …\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint table.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffsets to Paint tables.\nA dynamically resolving wrapper for <code>paint_offsets</code>.\nNumber of PairSet tables\nArray of offsets to PairSet tables. Offsets are from …\nA dynamically resolving wrapper for <code>pair_set_offsets</code>.\nNumber of PairValueRecords\nArray of PairValueRecords, ordered by glyph ID of the …\nKerning records.\nKerning records.\nAttempt to resolve <code>palette_entry_labels_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nAttempt to resolve <code>palette_labels_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nAttempt to resolve <code>palette_types_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nPANOSE classification number.\nPeak tuple record for this tuple variation table — …\nReturns the phantom point deltas for the given variation …\nNumber of attachment points on this glyph\nArray of contour point indices -in increasing numerical …\nReturns an iterator over the points in the glyph.\nReturn the number of glyphs explicitly assigned to a class …\nReturn the number of glyphs explicitly assigned to a class …\nReturn the number of glyphs in this table\nReturn the number of glyphs in this table\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 2\nFormat identifier: format = 2\nThe PPEM size for which this strike was designed.\nThe device pixel density (in PPI) for which this strike …\nProcess direction flag. If clear, process the glyphs …\nStart circle radius.\nStart circle radius. For variation, use varIndexBase + 2.\nEnd circle radius. For variation, use varIndexBase + 5.\nEnd circle radius.\nNumber of RangeRecords\nThe maximum value for a range associated with the specified\nThe minimum value for a range associated with the specified\nArray of glyph ranges — ordered by startGlyphID.\nThe value of nPairs minus the largest power of two less …\nThe value of unitSize times the difference of the value of …\nsegCount times 2, minus searchRange ((segCount * 2) - …\nThe value of unitSize times the difference of the value of …\nThe value of nPairs minus the largest power of two less …\nThe value of unitSize times the difference of the value of …\nThe fourth and fifth values represent the small end of the …\nArray of UnicodeRange records.\nRange1 array.\nRange3 array.\nRange4 array.\nRange2 array.\nRead an instance of <code>Self</code> from the provided data, …\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nInterpret the bytes at the provided offset as a slice of <code>T</code>.\nRead a scalar at the provided location in the data.\nRead a big-endian value at the provided location in the …\nReads points and flags into the provided buffers.\nInterpret the bytes at the provided offset as a reference …\nread an item, using the provided args.\nReturns for the device record that exactly matches the …\nArray of device records.\nGlyph ID of control glyph\nThe number of variation region tables in the variation …\nThe number of variation regions referenced.\nArray of indices into the variation region list for the …\nAttempt to resolve <code>region_list_offset</code>.\nA dynamically resolving wrapper for <code>region_offsets</code>.\nIndex of a feature required for this language system; if no\nResolve the provided offset from the start of this table.\nThe right-hand classes.\nThe number of right-hand classes.\nReturns the left side bearing delta for the specified …\nAttempt to resolve <code>rsb_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nThis metric specifies the distance between the baseline …\nFont-family class and subclass. This parameter is a …\nThe typographic ascender for this font.\nThe typographic descender for this font.\nThe typographic line gap for this font.\nThe ‘name’ table name ID that specifies sample text …\nScale factor in x and y directions. For variation, use …\nScale factor in x and y directions.\nScale factor in x and y directions.\nScale factor in x and y directions. For variation, use …\nScale factor in x direction.\nScale factor in x direction. For variation, use …\nScale factor in x direction.\nScale factor in x direction. For variation, use …\nScale factor in y direction.\nScale factor in y direction. For variation, use …\nScale factor in y direction.\nScale factor in y direction. For variation, use …\nNumber of ScriptRecords\nAttempt to resolve <code>script_list_offset</code>.\nAttempt to resolve <code>script_list_offset</code>.\nOffset to ScriptList table, from beginning of GSUB table\nOffset to ScriptList table, from beginning of GPOS table\nArray of ScriptRecords, listed alphabetically by script tag\nThe value of unitSize times the largest power of 2 that is …\nThe largest power of two less than or equal to the value …\nThe largest power of two less than or equal to the value …\nMaximum power of 2 less than or equal to segCount, times 2 …\nThe value of unitSize times the largest power of 2 that is …\nThe value of unitSize times the largest power of 2 that is …\n2 × segCount.\nSegments.\nSegments.\nFinds the first available script that matches one of the …\nSentinel GID. Set equal to the number of glyphs in the …\nSentinel GID. Set equal to the number of glyphs in the …\nNumber of SequenceLookupRecords\nNumber of SequenceLookupRecords\nNumber of SequenceLookupRecords\nNumber of SequenceLookupRecords\nNumber of SequenceLookupRecords\nNumber of SequenceLookupRecords\nArray of SequenceLookupRecords\nArray of SequenceLookupRecords\nArray of Sequence lookup records\nArray of SequenceLookupRecords\nArray of SequenceLookupRecords\nArray of SequenceLookupRecords\nNumber of SequenceRule tables\nArray of offsets to SequenceRule tables, from beginning of …\nNumber of SequenceRuleSet tables\nArray of offsets to SequenceRuleSet tables, from beginning …\nA dynamically resolving wrapper for <code>seq_rule_set_offsets</code>.\nA dynamically resolving wrapper for <code>seq_rule_offsets</code>.\nNumber of Sequence table offsets in the sequenceOffsets …\nArray of offsets to Sequence tables. Offsets are from …\nA dynamically resolving wrapper for <code>sequence_offsets</code>.\nAttempt to resolve <code>serialized_data_offset</code>.\nOffset from the start of the GlyphVariationData table to …\nList of setting names for a feature.\n0x00010000 or 0x4F54544F\n0x00010000 or 0x4F54544F\nReturn a reference to the table’s ‘Shape’ struct.\nThe number of shared tuple records. Shared tuple records …\nAttempt to resolve <code>shared_tuples_offset</code>.\nOffset from the start of this table to the shared tuple …\nReturns the top side bearing for the given glyph …\nReturns the left side bearing for the given glyph …\nPKCS#7 packet\nLength (in bytes) of the PKCS#7 packet in the signature …\nArray of signature records\nSize of device record, 32-bit aligned.\nReturns the total size in bytes of the index table.\nReturns the total size in bytes of the index table.\nReturns the size table for this set of tracking data.\nOffset from the start of the tracking table to the start …\nAttempt to resolve <code>source_paint_offset</code>.\nOffset to a source Paint table.\nReturns self[pos..]\nStart of the angular range of the gradient, 180° in …\nStart of the angular range of the gradient, 180° in …\nFirst character code covered\nStart character code for each segment.\nFirst glyph ID of the classValueArray\nSmallest size to correct, in ppem\nAttempt to resolve <code>state_array_offset</code>.\nAttempt to resolve <code>state_array_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nSize of a state, in bytes. The size is limited to 8 bits, …\nOffset to start of string storage (from start of table).\nOffsets from the beginning of the ‘sbix’ table to data …\nA dynamically resolving wrapper for <code>strike_offsets</code>.\nStorage for the string data.\nThe FontData containing the encoded name strings.\nThe 32-bit mask identifying which subtable this is (the …\nArray that maps high bytes to subHeaders: value is …\nNumber of subtables for this lookup\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier. Set to 1.\nFormat identifier: format = 1\nFormat identifier: format = 1\nFormat identifier: format = 2\nArray of substitute glyph IDs — ordered by Coverage index\nArray of substitute glyph IDs — ordered by Coverage …\nString of glyph IDs to substitute\nNumber of feature table substitution records.\nArray of feature table substitution records.\nReturns the subtable at the given index.\nData for subtables, immediately following the header.\nData for subtables, immediately following the header.\nArray of offsets to lookup subtables, from beginning of …\nA dynamically resolving wrapper for <code>subtable_offsets</code>.\nArray of chain subtables.\nAttempt to resolve <code>svg_document_list_offset</code>.\nOffset to the SVGDocumentList, from the start of the SVG …\nThis metric specifies the distance between the baseline …\nReturns the data for the table with the specified tag, if …\nReturns the associated table directory.\nArray of offsets to the TableDirectory for each font from …\nArray of offsets to the TableDirectory for each font from …\nTable records array—one for each top-level table in the …\nTable records array—one for each top-level table in the …\nThe various font tables\nTable identifier.\nTable identifier.\nReturns an iterator yielding the index and string value of …\nRange of each tag’s string.\nreturns self[..pos], and updates self to = self[pos..];\nData containing the Top DICT.\nLength of Top DICT structure in bytes.\nTop side bearings for glyph IDs greater than or equal to …\nArray of TrackTableEntry records.\nRemaining table data.\nRemaining table data.\nAttempt to resolve <code>transform_offset</code>.\nAttempt to resolve <code>transform_offset</code>.\nOffset to a VarAffine2x3 table.\nOffset to an Affine2x3 table.\nReturns the top side bearing delta for the specified glyph …\nAttempt to resolve <code>tsb_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nIf the font is in a TrueType collection (ttc) file, …\nFont Collection ID string: &quot;ttcf&quot;\nFont Collection ID string: &quot;ttcf&quot;\nThe tuple count. This value is only used with variation …\nThe tuple index (used for variations fonts). This value …\nA packed field. The high 4 bits are flags (see below). The …\nA packed field. The high 4 bits are flags, and the low 12 …\nA packed field. The high 4 bits are flags, and the low 12 …\nArray of tuple variation headers.\nArray of tuple variation headers.\nPublic re-export of the font-types crate.\nThe ‘name’ table name ID that specifies a string (or …\nCode page character range bits 0-31.\nCode page character range bits 32-63.\nUnicode Character Range.\nUnicode Character Range (bits 32-63).\nUnicode Character Range (bits 64-95).\nUnicode Character Range (bits 96-127).\nThis is the suggested distance of the top of the underline …\nSuggested values for the underline thickness. In general, …\nSize of a lookup unit for this lookup table in bytes. …\nSize of a lookup unit for this search in bytes.\nSize of a lookup unit for this search in bytes.\nSize of a lookup unit for this search in bytes.\nSet to a value from 16 to 16384. Any value in this range is\nThis is the Unicode codepoint, in UTF-16 encoding, of a …\nThis is the Unicode codepoint, in UTF-16 encoding, of a …\nThe minimum Unicode index (character code) in this font.\nThe maximum Unicode index (character code) in this font.\nThis field is used for fonts with multiple optical styles.\nThis field is used for fonts with multiple optical styles.\nThis field is used for fonts with multiple optical styles.\nWeight class.\nWidth class.\nThe “Windows ascender” metric.\nThe “Windows descender” metric.\nConverts user space coordinates provided by an unordered …\nReturns the index and subtable for the first mapping …\nReturns the COLRv0 base glyph for the given glyph …\nCollect the transitive closure of V0 glyphs needed for all …\nReturns the COLRv0 layer at the given index.\nReturns the COLRv1 base glyph for the given glyph …\nReturns the COLRv1 clip box for the given glyph identifier.\nCollect the transitive closure of v1 glyphs,layer/paletted …\nReturns the COLRv1 layer at the given index.\nPaired advance height and top side bearing values for each …\nReturns the vertical origin delta for the specified glyph …\nAttempt to resolve <code>v_org_mapping_offset</code>.\nOffset in bytes from the start of this table to the …\nA numeric value for this attribute value.\nA numeric value for this attribute value.\nThe lookup values (indexed by the glyph index minus the …\nNumber of ValueRecords — must equal glyphCount in the …\nDefines the types of data in the ValueRecord.\nDefines the types of data in the ValueRecords.\nDefines the types of data in valueRecord1 — for the first\nValueRecord definition — for the first glyph of the pair …\nDefines the types of data in valueRecord2 — for the …\nValueRecord definition — for the second glyph of the pair\nThe name ID for entries in the ‘name’ table that …\nThe name ID for entries in the ‘name’ table that …\nThe name ID for entries in the ‘name’ table that …\nThe name ID for entries in the ‘name’ table that …\nDefines positioning value(s) — applied to all glyphs in …\nThe number of value records — may be zero.\nThe size in bytes of each value record — must be greater …\nArray of ValueRecords — positioning values applied to …\nArray of value records that identify target items and the …\nReturns the pair of values for the given classes, …\nThe lookup values (indexed by the glyph index minus the …\nValues, indexed by glyph index.\nAttempt to resolve <code>var_composite_glyphs_offset</code>.\nVariation index to vary the value based on current …\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nAttempt to resolve <code>var_index_map_offset</code>.\nOffset to DeltaSetIndexMap table (may be NULL).\nArray of VariationSelector records.\nAttempt to resolve <code>var_store_offset</code>.\nOffset to ItemVariationStore (may be NULL).\nReturns the variation data containing the tuples and …\nA dynamically resolving wrapper for <code>variation_data_offsets</code>.\nThe size in bytes of the serialized data for this tuple …\nAttempt to resolve <code>variation_region_list_offset</code>.\nOffset in bytes from the start of the item variation store …\nArray of variation regions.\nThe version number of the extended kerning table …\nTable version; currently 1.\nMajor version number of the horizontal metrics variations …\nMajor version number of the axis variations table — set …\nThe major/minor version of the GDEF table\nTable version number - set to 0 or 1.\n(major, minor) Version for the BASE table (1,0) or (1,1)\nTable version number (0).\nVersion number (set to 1)\nThe major/minor version (1, 1)\nKern subtable version number– set to 0.\nMajor/minor version number. Set to 1.0.\nVersion number of the feature name table (0x00010000 for …\nMajor/minor version number of the glyph variations table …\nVersion number of the tracking table (0x00010000 for the …\nThe version number of the kerning table (0x00010000 for …\nTable version number—set to 0.\nTable version (starting at 0). Set to 0.\nMajor version number of the horizontal metrics variations …\nMajor &amp; minor version of the table: (1, 0)\nTable version number (0 or 1)\nTable version number (=0).\nMajor/minor version of the TTC Header\nMajor/minor version number. Set to 1.2 for new fonts.\nVersion number (set to zero).\nTable version number — set to 1.\nMajor version number of the font variations table — set …\nThe major and minor version of the GSUB table, as a tuple …\nMajor version number of the horizontal metrics variations …\nTable version number (set to 0).\nVersion number of the extended glyph metamorphosis table …\n0x00010000 for version 1.0 0x00020000 for version 2.0 …\nThe major/minor version (1, 0)\nVersion number of the font header table, set to (1, 0)\nVersion number of the metadata table — set to 1.\nThe major and minor version of the GPOS table, as a tuple …\nThe version: 0x00005000 for version 0.5, 0x00010000 for …\nVersion number of the DSIG table (0x00000001)\nMajor/minor version number. Set to 1.0.\nMajor/minor version number of the CVT variations table — …\nMajor/minor version of the TTC Header\nAttempt to resolve <code>vert_offset</code>.\nAttempt to resolve <code>vert_axis_offset</code>.\nOffset to vertical Axis table, from beginning of BASE …\nOffset from start of tracking table to TrackData for …\nArray of VertOriginYMetrics records, sorted by glyph ID.\nReturns the y coordinate of the of the glyph’s vertical …\nA packed field: the high bit is a flag—see details below.\nStart circle center x coordinate.\nStart point (p₀) x coordinate.\nStart point (p₀) x coordinate. For variation, use …\nStart circle center x coordinate. For variation, use …\nEnd point (p₁) x coordinate.\nEnd circle center x coordinate.\nEnd circle center x coordinate. For variation, use …\nEnd point (p₁) x coordinate. For variation, use …\nRotation point (p₂) x coordinate.\nRotation point (p₂) x coordinate. For variation, use …\nAverage weighted escapement.\nHorizontal value, in design units\nHorizontal value, in design units\nHorizontal value, in design units\nAttempt to resolve <code>x_device_offset</code>.\nOffset to Device table (non-variable font) / VariationIndex\nMaximum x for coordinate data.\nMaximum x coordinate across all glyph bounding boxes.\nMaximum x for coordinate data.\nMaximum x of clip box. For variation, use varIndexBase + 2.\nMaximum x of clip box.\nMax(lsb + (xMax-xMin))\nMinimum x for coordinate data.\nMinimum x of clip box. For variation, use varIndexBase + 0.\nMinimum x for coordinate data.\nMinimum x of clip box.\nMinimum x coordinate across all glyph bounding boxes.\nAngle of skew in the direction of the x-axis, 180° in …\nAngle of skew in the direction of the x-axis, 180° in …\nAngle of skew in the direction of the x-axis, 180° in …\nAngle of skew in the direction of the x-axis, 180° ┬░ …\nx-component of transformed x-basis vector.\nx-component of transformed x-basis vector. For variation, …\nx-component of transformed y-basis vector. For variation, …\nx-component of transformed y-basis vector.\nStart circle center y coordinate.\nStart point (p₀) y coordinate. For variation, use …\nStart circle center y coordinate. For variation, use …\nStart point (p₀) y coordinate.\nEnd point (p₁) y coordinate. For variation, use …\nEnd point (p₁) y coordinate.\nEnd circle center y coordinate. For variation, use …\nEnd circle center y coordinate.\nRotation point (p₂) y coordinate. For variation, use …\nRotation point (p₂) y coordinate.\nVertical value, in design units\nVertical value, in design units\nVertical value, in design units\nAttempt to resolve <code>y_device_offset</code>.\nOffset to Device table (non-variable font) / VariationIndex\nMaximum y of clip box. For variation, use varIndexBase + 3.\nMaximum y coordinate across all glyph bounding boxes.\nMaximum y for coordinate data.\nMaximum y of clip box.\nMaximum y for coordinate data.\nDefined as max( tsb + (yMax-yMin)).\nMinimum y for coordinate data.\nMinimum y for coordinate data.\nMinimum y coordinate across all glyph bounding boxes.\nMinimum y of clip box.\nMinimum y of clip box. For variation, use varIndexBase + 1.\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\nThe position of the top of the strikeout stroke relative …\nThickness of the strikeout stroke in font design units.\nThe recommended horizontal offset in font design units for …\nThe recommended horizontal size in font design units for …\nThe recommended vertical offset in font design units for …\nThe recommended vertical size in font design units for …\nThe recommended horizontal offset in font design units for …\nThe recommended horizontal size in font design units for …\nThe recommended vertical offset in font design units for …\nThe recommended vertical size in font design units for …\ny-component of transformed x-basis vector.\ny-component of transformed x-basis vector. For variation, …\ny-component of transformed y-basis vector.\ny-component of transformed y-basis vector. For variation, …\nAn array whose items size is not known at compile time.\nAn array of items of non-uniform length.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the item at the provided index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn an iterator over this array’s items.\nThe number of items in the array\nA set of disjoint ranges over numeric types.\nReturns the argument unchanged.\nInsert a range into this set, automatically merging with …\nA fast, efficient, sparse, &amp; ordered unsigned integer …\nReturns an iterator over the intersection of this and …\nCalls <code>U::from(self)</code>.\nReturns an iterator over the contained ranges.\nDefines the domain of <code>IntSet</code> member types.\nMarks a mapped value as being in the domain of <code>T</code> for <code>Domain</code>…\nA fast &amp; efficient invertible ordered set for small (up to …\nA fast, efficient, sparse, &amp; ordered <code>u32</code> set.\nCreate a new set which contains all integers (exclusive).\nRemove all members from this set.\nClears the set, removing all values.\nReturns <code>true</code> if the value is part of this domain.\nReturns true if val is a member of this set.\nReturns <code>true</code> if the set contains a value.\nReturns the number of members in the domain.\nCreate a new empty set (inclusive).\nExtends a collection with the contents of an iterator.\nAn alternate version of <code>extend()</code> which is optimized for …\nAn alternate version of <code>extend()</code> which is optimized for …\nReturns first element in the set, if any. This element is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPopulate this set with the values obtained from decoding …\nPopulate this set with the values obtained from decoding …\nConverts a mapped u32 value back to T.\nIf this is an inclusive membership set then returns an …\nAdd val as a member of this set.\nAdds a value to the set.\nAdd all values in range as members of this set.\nAdd all values in range as members of this set.\nSets the members of this set to the intersection of self …\nSets the members of this set to the intersection of self …\nReturns true if this set contains at least one element in …\nReturns true if this set contains at least one element in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inverted version of this set.\nReturns true if all u32 values between the mapped u32 min …\nReturn true if there are no members in this set.\nReturn true if there are no members in this set.\nReturns true if this set is inverted (has exclusive …\nIterator over the members of this set. In sorted order …\nReturns an iterator over all members of the set in sorted …\nReturns an iterator over the members of this set that are …\nReturns an iterator over all disjoint ranges of values not …\nIterator over the members of this set starting from value.\nIterate over the ranges of contiguous values in this set.\nReturns an iterator over all disjoint ranges of values …\nReturns the last element in the set, if any. This element …\nReturns the number of members in this set.\nReturns the number of members in this set.\nCreate a new, (empty) <code>IntSet</code>.\nReturns an iterator which iterates over all values in the …\nReturn an iterator which iterates over all values of T in …\nReturns an iterator over members of this set that are in …\nRemove val from this set.\nRemoves a value from the set. Returns whether the value …\nRemoves all values in range as members of this set.\nRemoves all values in range as members of this set.\nSets the members of this set to other - self.\nProvides serialization of <code>IntSet</code>’s to a highly compact …\nSets the members of this set to self - other.\nSets the members of this set to self - other.\nEncode this set as a sparse bit set byte encoding.\nConverts this value of <code>T</code> to a value in u32.\nSets the members of this set to the union of self and …\nSets the members of this set to the union of self and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncode this set as a sparse bit set byte encoding with a …\nApple Advanced Typography common tables.\nThe anchor point table.\nThe Axis Variations table\nThe BASE table\nCommon bitmap (EBLC/EBDT/CBLC/CBDT) types.\nThe CBDT (Color Bitmap Data) table\nThe CBLC (Color Bitmap Location) table\nThe CFF table\nThe CFF2 table\nThe cmap table\nThe COLR table\nComputes the table checksum for the given data.\nThe CPAL table\nThe cvar (CVT Variations) table.\nThe DSIG table\nThe EBDT (Embedded Bitmap Data) table\nThe EBLC (Embedded Bitmap Location) table\nThe feature name table.\nThe Font Variations table\nThe gasp table\nthe GDEF table\nThe glyf (Glyph Data) table\nthe GPOS table\nthe GSUB table\nThe gvar (Glyph Variations) table\nThe Horizontal Device Metrics table.\nThe head table\nthe hhea (Horizontal Header) table\nThe hmtx (Horizontal Metrics) table\nThe HVAR (Horizontal Metrics Variation) table\nThe kerning table.\nThe Extended Kerning (kerx) table.\nOpenType Layout common table formats\nThe loca (Index to Location) table\nThe language tag table.\nThe maxp table\nThe meta (Metadata) table\nThe morx (Extended Glyph Metamorphosis) table.\nThe MVAR (Metrics Variation) table\nThe name (Naming) table\nThe os2 table\nthe post (PostScript) table\nPostScript (CFF and CFF2) common tables.\nThe sbix (Standard Bitmap Graphics) table\nThe STAT table\nThe SVG table\nThe tracking (trak) table.\nthe VARC (Variable Composite/Component) table\nOpenType font variations common tables.\nthe vhea (Horizontal Header) table\nThe vmtx (Vertical Metrics) table\nThe VORG (Vertical Origin) table.\nThe VVAR (Vertical Metrics Variation) table\nMaps the glyph indexes of your font into classes.\nLookup tables provide a way of looking up information …\nSimple array format. The lookup data is an array of lookup …\nTrimmed array format. The lookup data is a simple trimmed …\nSegment single format. Each non-overlapping segment has a …\nSegment array format. A segment mapping is performed (as …\nSingle table format. The lookup data is a sorted list of &lt;…\nTrimmed array format. The lookup data is a simple trimmed …\nLookup segment for format 2.\nLookup segment for format 4.\nLookup single record for format 6.\nTrait for values that can be read from lookup tables.\nEmpty data type for a state table entry with no payload.\nUsed for the <code>state_array</code> and <code>entry_table</code> fields in …\nUsed for the <code>state_array</code> in <code>StxHeader</code>.\nEntry in an (extended) state table.\nHeader for a state table.\nTable for driving a finite state machine for layout.\nHeader for an extended state table.\nPredefined classes.\nReturns the class table entry for the given glyph …\nReturns the class table entry for the given glyph …\nThe class codes (indexed by glyph index minus firstGlyph). …\nAttempt to resolve <code>class_table_offset</code>.\nAttempt to resolve <code>class_table_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nValues, indexed by glyph index.\nReturns the entry for the given state and class.\nReturns the entry for the given state and class.\nThe log base 2 of the largest power of 2 less than or …\nThe log base 2 of the largest power of 2 less than or …\nThe log base 2 of the largest power of 2 less than or …\nAttempt to resolve <code>entry_table_offset</code>.\nAttempt to resolve <code>entry_table_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nFirst glyph index included in the trimmed array.\nFirst glyph index included in the trimmed array.\nGlyph index of the first glyph in the class table.\nFirst glyph index in this segment.\nFirst glyph index in this segment.\nFirst glyph index in this segment.\nFlag values are table specific.\nFormat number is set to 0.\nFormat number is set to 2.\nFormat number is set to 4.\nFormat number is set to 6.\nFormat number is set to 8.\nFormat number is set to 10.\nFormat number is set to 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe glyph index.\nTotal number of glyphs (equivalent to the last glyph minus …\nTotal number of glyphs (equivalent to the last glyph minus …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast glyph index in this segment.\nLast glyph index in this segment.\nLast glyph index in this segment.\nNumber of classes, which is the number of 16-bit entry …\nNumber of glyphs in class table.\nNumber of units of the preceding size to be searched.\nNumber of units of the preceding size to be searched.\nNumber of units of the preceding size to be searched.\nIndex of the next state.\nReturn the <code>FontData</code> used to resolve offsets for this table.\nPayload is table specific.\nThe value of unitSize times the difference of the value of …\nThe value of unitSize times the difference of the value of …\nThe value of unitSize times the difference of the value of …\nReads scalar values that are referenced from state table …\nThe value of unitSize times the largest power of 2 that is …\nThe value of unitSize times the largest power of 2 that is …\nThe value of unitSize times the largest power of 2 that is …\nSegments.\nSegments.\nAttempt to resolve <code>state_array_offset</code>.\nAttempt to resolve <code>state_array_offset</code>.\nByte offset from the beginning of the state table to the …\nByte offset from the beginning of the state table to the …\nSize of a state, in bytes. The size is limited to 8 bits, …\nSize of a lookup unit for this search in bytes.\nSize of a lookup unit for this search in bytes.\nSize of a lookup unit for this search in bytes.\nSize of a lookup unit for this lookup table in bytes. …\nReturns the value associated with the given index.\nThe lookup value.\nThe lookup value.\nThe lookup values (indexed by the glyph index minus the …\nA 16-bit offset from the start of the table to the data.\nA 16-bit offset from the start of the table to the data.\nValues, indexed by glyph index.\nThe lookup values (indexed by the glyph index minus the …\nIndividual anchor point.\nThe anchor point table.\nReturns the set of anchor points for the given glyph.\nIndividual anchor points.\nFlags (currently unused; set to zero).\nReturns the argument unchanged.\nOffset to the glyph data table.\nCalls <code>U::from(self)</code>.\nAttempt to resolve <code>lookup_table_offset</code>.\nOffset to the table’s lookup table; currently this is …\nNumber of anchor points for this glyph.\nVersion number (set to zero).\nThe avar (Axis Variations) table\nAxisValueMap record\nSegmentMaps record\nApplies the piecewise linear mapping to the specified …\nThe number of variation axes for this font. This must be …\nAttempt to resolve <code>axis_index_map_offset</code>.\nOffset to DeltaSetIndexMap table (may be NULL).\nThe segment maps array — one segment map for each axis, …\nThe array of axis value map records for this axis.\nThe array of axis value map records for this axis.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA normalized coordinate value obtained using default …\nA normalized coordinate value obtained using default …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of correspondence pairs for this axis.\nThe number of correspondence pairs for this axis.\nThe modified, normalized coordinate value.\nThe modified, normalized coordinate value.\nAttempt to resolve <code>var_store_offset</code>.\nOffset to ItemVariationStore (may be NULL).\nMajor version number of the axis variations table — set …\nAxis Table\nThe BASE (Baseline) table\nBaseCoordFormat1\nBaseCoordFormat2\nBaseCoordFormat3\nBaseLangSysRecord\nBaseScript Table\nBaseScriptList Table\nBaseScriptRecord\nBaseTagList Table\nBaseValues table\nFeatMinMaxRecord\nMinMax table\nNumber of BaseCoord tables defined — should equal …\nFormat identifier — format = 1\nFormat identifier — format = 2\nFormat identifier — format = 3\nFormat identifier — format = 1\nArray of offsets to BaseCoord tables, from beginning of …\nIndex of contour point on the reference glyph\nA dynamically resolving wrapper for <code>base_coord_offsets</code>.\nNumber of BaseLangSysRecords defined — may be zero (0)\nArray of BaseLangSysRecords, in alphabetical order by …\n4-byte language system identification tag\n4-byte language system identification tag\nOffset to BaseScript table, from beginning of …\nNumber of BaseScriptRecords defined\nAttempt to resolve <code>base_script_list_offset</code>.\nOffset to BaseScriptList table, from beginning of Axis …\nOffset to BaseScript table, from beginning of …\nOffset to BaseScript table, from beginning of …\nArray of BaseScriptRecords, in alphabetical order by …\n4-byte script identification tag\n4-byte script identification tag\nNumber of baseline identification tags in this text …\nAttempt to resolve <code>base_tag_list_offset</code>.\nOffset to BaseTagList table, from beginning of Axis table …\nAttempt to resolve <code>base_values_offset</code>.\nOffset to BaseValues table, from beginning of BaseScript …\nArray of 4-byte baseline identification tags — must be in\nX or Y value, in design units\nX or Y value, in design units\nX or Y value, in design units\nX or Y value, in design units\nIndex number of default baseline for this script — equals\nAttempt to resolve <code>default_min_max_offset</code>.\nOffset to MinMax table, from beginning of BaseScript table …\nAttempt to resolve <code>device_offset</code>.\nOffset to Device table (non-variable font) / Variation …\nNumber of FeatMinMaxRecords — may be zero (0)\nArray of FeatMinMaxRecords, in alphabetical order by …\n4-byte feature identification tag — must match feature …\n4-byte feature identification tag — must match feature …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to resolve <code>horiz_axis_offset</code>.\nOffset to horizontal Axis table, from beginning of BASE …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to resolve <code>item_var_store_offset</code>.\nOffset to Item Variation Store table, from beginning of …\nAttempt to resolve <code>max_coord_offset</code>.\nOffset to BaseCoord table that defines the maximum extent …\nOffset to BaseCoord table that defines maximum extent …\nOffset to BaseCoord table that defines the maximum extent …\nOffset to BaseCoord table that defines the maximum extent …\nAttempt to resolve <code>min_coord_offset</code>.\nOffset to BaseCoord table that defines the minimum extent …\nOffset to BaseCoord table that defines the minimum extent …\nOffset to BaseCoord table that defines the minimum extent …\nOffset to BaseCoord table that defines the minimum extent …\nOffset to MinMax table, from beginning of BaseScript table\nOffset to MinMax table, from beginning of BaseScript table\nOffset to MinMax table, from beginning of BaseScript table\nReturn the <code>FontData</code> used to resolve offsets for this table.\nGlyph ID of control glyph\n(major, minor) Version for the BASE table (1,0) or (1,1)\nAttempt to resolve <code>vert_axis_offset</code>.\nOffset to vertical Axis table, from beginning of BASE …\nEbdtComponent record.\nBigGlyphMetrics record.\nThe full bitmap is tightly packed according to the bit …\nBitmap flags.\nBitmapSize record.\nEach row of the data is aligned to a byte boundary.\nGlyphIdOffsetPair record.\nHorizontal\nIndexSubtables format type.\nIndexSubTable1: variable-metrics glyphs with 4-byte …\nIndexSubTable2: all glyphs have identical metrics.\nIndexSubTable3: variable-metrics glyphs with 2-byte …\nIndexSubTable4: variable-metrics glyphs with sparse glyph …\nIndexSubTable5: constant-metrics glyphs with sparse glyph …\nIndexSubtableList table.\nSbitLineMetrics record.\nSmallGlyphMetrics record.\nVertical\nHorizontal or vertical advance width in pixels.\nHorizontal or vertical advance width in pixels.\nReturns the set containing all flags.\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the top …\nDistance in pixels from the horizontal origin to the top …\nAll glyphs have the same metrics; glyph data may be …\nAll glyphs have the same metrics.\nThe Microsoft rasterizer v.1.7 or greater supports the …\nThe Microsoft rasterizer v.1.7 or greater supports the …\nBit depth from the associated size. Required for computing …\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nNot used; set to 0.\nNot used; set to 0.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nOffset in bytes from the start of the EBDT/CBDT table.\nSize of the image data in bytes.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nHighest glyph index for this size.\nHighest glyph index for this size.\nFirst glyph ID of this range.\nFirst glyph ID of this range.\nVertical or horizontal.\nVertical or horizontal.\nFormat of EBDT/CBDT image data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nOne per glyph.\nOne per glyph, sorted by glyhph ID.\nGlyph ID of glyph present.\nComponent glyph ID.\nGlyph ID of glyph present.\nComponent glyph ID.\nNumber of rows of data.\nNumber of rows of data.\nNumber of rows of data.\nNumber of rows of data.\nLine metrics for text rendered horizontally.\nLine metrics for text rendered horizontally.\nHorizontal advance width in pixels.\nHorizontal advance width in pixels.\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the top …\nDistance in pixels from the horizontal origin to the top …\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nOffset to image data in EBDT table.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nFormat of EBDT image data.\nAll the glyphs are of the same size.\nAll glyphs have the same data size.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nFormat of this IndexSubTable.\nOffset to an IndexSubtable from the start of the …\nReturns the IndexSubtableList associated with this size.\nOffset to IndexSubtableList, from beginning of EBLC/CBLC.\nOffset to IndexSubtableList, from beginning of EBLC/CBLC.\nTotal size in bytes of the IndexSubtableList including its …\nTotal size in bytes of the IndexSubtableList including its …\nOffset to an IndexSubtable from the start of the …\nOffset to an IndexSubtable from the start of the …\nArray of IndexSubtableRecords.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no flags are currently stored.\nReturns true if the location references an empty bitmap …\nLast glyph ID of this range (inclusive).\nLast glyph ID of this range (inclusive).\nReturns the bitmap location information for the given …\nFull metrics, if present in the EBLC/CBLC table.\nReturns the complement of this set of flags.\nArray length.\nArray length.\nNumber of IndexSubtables in the IndexSubtableList.\nNumber of IndexSubtables in the IndexSubtableList.\nReturn the <code>FontData</code> used to resolve offsets for this table.\nHorizontal pixels per em.\nHorizontal pixels per em.\nVertical pixels per em.\nVertical pixels per em.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nA constructor that requires additional arguments.\nRemoves the specified flags in-place.\nLocation in EBDT.\nLocation in EBDT.\nLowest glyph index for this size.\nLowest glyph index for this size.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nLine metrics for text rendered vertically.\nLine metrics for text rendered vertically.\nVertical advance width in pixels.\nVertical advance width in pixels.\nDistance in pixels from the vertical origin to the left …\nDistance in pixels from the vertical origin to the left …\nDistance in pixels from the vertical origin to the top …\nDistance in pixels from the vertical origin to the top …\nNumber of columns of data.\nNumber of columns of data.\nNumber of columns of data.\nNumber of columns of data.\nPosition of component left.\nPosition of component left.\nPosition of component top.\nPosition of component top.\nThe Color Bitmap Data table\nMajor version of the CBDT table, = 3.\nMinor version of CBDT table, = 0.\nThe Color Bitmap Location table\nBitmapSize records array.\nMajor version of the CBLC table, = 3.\nMinor version of CBLC table, = 0.\nNumber of BitmapSize records.\nThe Compact Font Format table.\nCompact Font Format table header\nPadding bytes before the start of the Name INDEX.\nReturns the character set associated with the top dict at …\nReturns the argument unchanged.\nReturns the global subroutine index.\nHeader size (bytes).\nCalls <code>U::from(self)</code>.\nFormat major version (starting at 1).\nFormat minor version (starting at 0).\nReturns the PostScript name for the font in the font set …\nReturns the name index.\nAbsolute offset size.\nReturns the associated string for the given identifier.\nReturns the string index.\nReturns the top dict index.\nRemaining table data.\nThe Compact Font Format (CFF) version 2 table\nCompact Font Format (CFF) version 2 table header\nPadding bytes before the start of the Top DICT.\nReturns the argument unchanged.\nReturns the global subroutine index.\nHeader size (bytes).\nCalls <code>U::from(self)</code>.\nFormat major version (set to 2).\nFormat minor version (set to 0).\nData containing the Top DICT.\nReturns the raw data containing the top dict.\nLength of Top DICT structure in bytes.\nRemaining table data.\ncmap\ncmap Format 0: Byte encoding table\ncmap Format 10: Tr\ncmap Format 12: Segmented coverage\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 13: Many-to-one range mappings\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 14: Unicode Variation Sequences\nIterator over all (codepoint, selector, mapping variant) …\ncmap Format 2: High-byte mapping through table\ncmap Format 4: Segment mapping to delta values\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 6: Trimmed table mapping\ncmap Format 8: mixed 16-bit and 32-bit coverage\nCharacter and glyph limits for iterating format 12 and 13 …\nThe different cmap subtable formats.\nPart of Cmap13\nDefault UVS table\nEncoding Record\nResult of mapping a codepoint with a variation selector.\nNon-Default UVS table\n…\nUsed in Cmap8 and Cmap12\nPart of Cmap2\nPart of Cmap14\nThe variation selector should be ignored and the default …\nPart of Cmap14\nThe variant glyph mapped by a codepoint and associated …\nPart of Cmap14\nNumber of additional values in this range\nNumber of additional values in this range\nReturns the index, encoding record and subtable for the …\nReturns the default limits for the given font.\nOffset from the start of the <code>Cmap14</code> subtable to Default UVS\nOffset from the start of the <code>Cmap14</code> subtable to Default UVS\nOffset from the start of the <code>Cmap14</code> subtable to Default UVS\nPlatform-specific encoding ID.\nPlatform-specific encoding ID.\nLast character code in this group; same condition as listed\nLast character code in this group\nLast character code in this group; same condition as listed\nLast character code in this group\nEnd characterCode for each segment, last=0xFFFF.\nNumber of character codes in subrange.\nNumber of valid low bytes for this SubHeader.\nNumber of valid low bytes for this SubHeader.\nLog2 of the maximum power of 2 less than or equal to …\nFirst character code of subrange.\nFirst valid low byte for this SubHeader.\nFirst valid low byte for this SubHeader.\nFormat number is set to 0.\nFormat number is set to 2.\nFormat number is set to 4.\nFormat number is set to 6.\nSubtable format; set to 8.\nSubtable format; set to 10.\nSubtable format; set to 12.\nSubtable format; set to 13.\nSubtable format. Set to 14.\nFormat number is set to 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe number of glyphs in the font.\nGlyph index to be used for all the characters in the …\nGlyph ID of the UVS\nGlyph index to be used for all the characters in the …\nGlyph ID of the UVS\nAn array that maps character codes to glyph index values.\nGlyph index array (arbitrary length)\nArray of glyph index values for character codes in the …\nArray of glyph indices for the character codes covered\nArray of SequentialMapGroup records.\nArray of SequentialMapGroup records.\nArray of ConstantMapGroup records.\nDelta for all character codes in segment.\nSee text below.\nSee text below.\nSee text below.\nSee text below.\nOffsets into glyphIdArray or 0\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTightly packed array of bits (8K bytes total) indicating …\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over all (codepoint, selector, mapping …\nReturns an iterator over all (codepoint, glyph identifier) …\nReturns an iterator over all (codepoint, glyph identifier) …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nFor requirements on use of the language field, see “Use …\nThis is the length in bytes of the subtable.\nThis is the length in bytes of the subtable.\nThis is the length in bytes of the subtable.\nThis is the length in bytes of the subtable.\nByte length of this subtable (including the header)\nByte length of this subtable (including the header)\nByte length of this subtable (including the header)\nByte length of this subtable (including the header)\nByte length of this subtable (including this header)\nMap a codepoint to a nominal glyph identifier\nMaps a codepoint to a nominal glyph identifier.\nMaps a codepoint to a nominal glyph identifier.\nMaps a codepoint to a nominal glyph identifier.\nMaps a codepoint and variation selector to a nominal glyph …\nThe maximum valid character.\nCreate from a raw scalar.\nOffset from the start of the <code>Cmap14</code> subtable to Non-Default\nOffset from the start of the <code>Cmap14</code> subtable to Non-Default\nOffset from the start of the <code>Cmap14</code> subtable to Non-Default\nNumber of character codes covered\nNumber of groupings which follow\nNumber of groupings which follow\nNumber of groupings which follow\nNumber of encoding tables that follow.\nNumber of Unicode character ranges.\nNumber of variation Selector Records\nReturn the <code>FontData</code> used to resolve offsets for this table.\nPlatform ID.\nPlatform ID.\nsegCount times 2, minus searchRange ((segCount * 2) - …\nArray of UnicodeRange records.\nMaximum power of 2 less than or equal to segCount, times 2 …\n2 × segCount.\nFirst character code covered\nFirst character code in this group; note that if this …\nFirst character code in this group\nFirst character code in this group; note that if this …\nFirst character code in this group\nStart character code for each segment.\nGlyph index corresponding to the starting character code\nGlyph index corresponding to the starting character code\nFirst value in this range\nFirst value in this range\nArray that maps high bytes to subHeaders: value is …\nReturns the subtable at the given index.\nByte offset from beginning of the <code>Cmap</code> table to the …\nByte offset from beginning of the <code>Cmap</code> table to the …\nByte offset from beginning of the <code>Cmap</code> table to the …\nBase Unicode value of the UVS\nBase Unicode value of the UVS\nReturns the index and subtable for the first mapping …\nArray of VariationSelector records.\nVariation selector\nVariation selector\nTable version number (0).\nAffine2x3 record\nBaseGlyph record\nBaseGlyphList table\nBaseGlyphPaint record\nClip record\nClipBox table\nClipBoxFormat1 record\nClipBoxFormat2 record\nClipList table\nColorIndex record\nColorLine table\nColorStop record\nCOLR (Color) table\nCompositeMode enumeration\nExtend enumeration\nLayer record\nLayerList table\nPaint tables\nPaintColrGlyph table\nPaintColrLayers table\nPaintComposite table\nPaintGlyph table\nUnique paint identifier used for detecting cycles in the …\nPaintLinearGradient table\nPaintRadialGradient table\nPaintRotate table\nPaintRotateAroundCenter table\nPaintScale table\nPaintScaleAroundCenter table\nPaintScaleUniform table\nPaintScaleUniformAroundCenter table\nPaintSkew table\nPaintSkewAroundCenter table\nPaintSolid table\nPaintSweepGradient table\nPaintTransform table\nPaintTranslate table\nPaintVarLinearGradient table\nPaintVarRadialGradient table\nPaintVarRotate table\nPaintVarRotateAroundCenter table\nPaintVarScale table\nPaintVarScaleAroundCenter table\nPaintVarScaleUniform table\nPaintVarScaleUniformAroundCenter table\nPaintVarSkew table\nPaintVarSkewAroundCenter table\nPaintVarSolid table\nPaintVarSweepGradient table\nPaintVarTransform table\nPaintVarTranslate table\nVarAffine2x3 record\nVarColorIndex record\nVarColorLine table\nVarColorStop record\nAlpha value.\nAlpha value. For variation, use varIndexBase + 0.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 0.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 1.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 0.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 1.\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nRotation angle, 180° in counter-clockwise degrees per 1.0 …\nAttempt to resolve <code>backdrop_paint_offset</code>.\nOffset to a backdrop Paint table.\nAttempt to resolve <code>base_glyph_list_offset</code>.\nOffset to BaseGlyphList table.\nAttempt to resolve <code>base_glyph_records_offset</code>.\nOffset to baseGlyphRecords array (may be NULL).\nCenter x coordinate.\nCenter x coordinate. For variation, use varIndexBase + 0.\nx coordinate for the center of scaling.\nx coordinate for the center of scaling. For variation, use …\nx coordinate for the center of scaling.\nx coordinate for the center of scaling. For variation, use …\nx coordinate for the center of rotation.\nx coordinate for the center of rotation. For variation, use\nx coordinate for the center of rotation.\nx coordinate for the center of rotation. For variation, use\nCenter y coordinate.\nCenter y coordinate. For variation, use varIndexBase + 1.\ny coordinate for the center of scaling.\ny coordinate for the center of scaling. For variation, use …\ny coordinate for the center of scaling.\ny coordinate for the center of scaling. For variation, use …\ny coordinate for the center of rotation.\ny coordinate for the center of rotation. For variation, use\ny coordinate for the center of rotation.\ny coordinate for the center of rotation. For variation, use\nOffset to a ClipBox table, from the beginning of the …\nOffset to a ClipBox table, from the beginning of the …\nOffset to a ClipBox table, from the beginning of the …\nAttempt to resolve <code>clip_list_offset</code>.\nOffset to ClipList table (may be NULL).\nClip records. Sorted by startGlyphID.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nAttempt to resolve <code>color_line_offset</code>.\nOffset to ColorLine table.\nOffset to VarColorLine table.\nOffset to ColorLine table.\nOffset to VarColorLine table.\nOffset to ColorLine table.\nOffset to VarColorLine table.\nAllows for variations.\nA CompositeMode enumeration value.\nTranslation in x direction.\nTranslation in x direction. For variation, use …\nTranslation in x direction.\nTranslation in x direction. For variation, use …\nTranslation in y direction.\nTranslation in y direction. For variation, use …\nTranslation in y direction.\nTranslation in y direction. For variation, use …\nEnd of the angular range of the gradient, 180° in …\nEnd of the angular range of the gradient, 180° in …\nLast glyph ID in the range.\nLast glyph ID in the range.\nAn Extend enum value.\nAn Extend enum value.\nIndex (base 0) into the LayerList.\nIndex (base 0) into the layerRecords array.\nIndex (base 0) into the layerRecords array.\nSet to 1.\nSet to 1.\nSet to 2.\nSet to 1.\nSet to 2.\nSet to 3.\nSet to 4.\nSet to 5.\nSet to 6.\nSet to 7.\nSet to 8.\nSet to 9.\nSet to 10.\nSet to 11.\nSet to 12.\nSet to 13.\nSet to 14.\nSet to 15.\nSet to 16.\nSet to 17.\nSet to 18.\nSet to 19.\nSet to 20.\nSet to 21.\nSet to 22.\nSet to 23.\nSet to 24.\nSet to 25.\nSet to 26.\nSet to 27.\nSet to 28.\nSet to 29.\nSet to 30.\nSet to 31.\nSet to 32.\nSet to 1.\nSet to 1.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlyph ID for the source outline.\nGlyph ID for a BaseGlyphList base glyph.\nGlyph ID of the base glyph.\nGlyph ID of the glyph used for a given layer.\nGlyph ID of the base glyph.\nGlyph ID of the base glyph.\nGlyph ID of the glyph used for a given layer.\nGlyph ID of the base glyph.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to resolve <code>item_variation_store_offset</code>.\nOffset to ItemVariationStore (may be NULL).\nAttempt to resolve <code>layer_list_offset</code>.\nOffset to LayerList table (may be NULL).\nAttempt to resolve <code>layer_records_offset</code>.\nOffset to layerRecords array (may be NULL).\nCreate from a raw scalar.\nCreate from a raw scalar.\nNumber of BaseGlyph records; may be 0 in a version 1 table.\nNumber of Clip records.\nNumber of Layer records; may be 0 in a version 1 table.\nNumber of offsets to paint tables to read from LayerList.\nNumber of color layers associated with this glyph.\nNumber of color layers associated with this glyph.\nNumber of ColorStop records.\nNumber of ColorStop records.\nReturn the <code>FontData</code> used to resolve offsets for this table.\nReturn the <code>FontData</code> used to resolve offsets for this table.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nAttempt to resolve <code>paint_offset</code>.\nOffset to a Paint table, from the beginning of the …\nOffset to a Paint table.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint subtable.\nOffset to a Paint table, from the beginning of the …\nOffset to a Paint table, from the beginning of the …\nOffsets to Paint tables.\nA dynamically resolving wrapper for <code>paint_offsets</code>.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex (base 0) for a palette entry in the CPAL table.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex (base 0) for a palette entry in the CPAL table.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nStart circle radius.\nStart circle radius. For variation, use varIndexBase + 2.\nEnd circle radius.\nEnd circle radius. For variation, use varIndexBase + 5.\nScale factor in x and y directions.\nScale factor in x and y directions. For variation, use …\nScale factor in x and y directions.\nScale factor in x and y directions. For variation, use …\nScale factor in x direction.\nScale factor in x direction. For variation, use …\nScale factor in x direction.\nScale factor in x direction. For variation, use …\nScale factor in y direction.\nScale factor in y direction. For variation, use …\nScale factor in y direction.\nScale factor in y direction. For variation, use …\nAttempt to resolve <code>source_paint_offset</code>.\nOffset to a source Paint table.\nStart of the angular range of the gradient, 180° in …\nStart of the angular range of the gradient, 180° in …\nFirst glyph ID in the range.\nFirst glyph ID in the range.\nPosition on a color line.\nPosition on a color line. For variation, use varIndexBase …\nPosition on a color line.\nPosition on a color line. For variation, use varIndexBase …\nAttempt to resolve <code>transform_offset</code>.\nAttempt to resolve <code>transform_offset</code>.\nOffset to an Affine2x3 table.\nOffset to a VarAffine2x3 table.\nReturns the COLRv0 base glyph for the given glyph …\nCollect the transitive closure of V0 glyphs needed for all …\nReturns the COLRv0 layer at the given index.\nReturns the COLRv1 base glyph for the given glyph …\nReturns the COLRv1 clip box for the given glyph identifier.\nCollect the transitive closure of v1 glyphs,layer/paletted …\nReturns the COLRv1 layer at the given index.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nAttempt to resolve <code>var_index_map_offset</code>.\nOffset to DeltaSetIndexMap table (may be NULL).\nTable version number - set to 0 or 1.\nStart point (p₀) x coordinate.\nStart point (p₀) x coordinate. For variation, use …\nStart circle center x coordinate.\nStart circle center x coordinate. For variation, use …\nEnd point (p₁) x coordinate.\nEnd point (p₁) x coordinate. For variation, use …\nEnd circle center x coordinate.\nEnd circle center x coordinate. For variation, use …\nRotation point (p₂) x coordinate.\nRotation point (p₂) x coordinate. For variation, use …\nMaximum x of clip box.\nMaximum x of clip box. For variation, use varIndexBase + 2.\nMaximum x of clip box.\nMinimum x of clip box.\nMinimum x of clip box. For variation, use varIndexBase + 0.\nMinimum x of clip box.\nAngle of skew in the direction of the x-axis, 180° in …\nAngle of skew in the direction of the x-axis, 180° ┬░ …\nAngle of skew in the direction of the x-axis, 180° in …\nAngle of skew in the direction of the x-axis, 180° in …\nx-component of transformed x-basis vector.\nx-component of transformed x-basis vector. For variation, …\nx-component of transformed y-basis vector.\nx-component of transformed y-basis vector. For variation, …\nStart point (p₀) y coordinate.\nStart point (p₀) y coordinate. For variation, use …\nStart circle center y coordinate.\nStart circle center y coordinate. For variation, use …\nEnd point (p₁) y coordinate.\nEnd point (p₁) y coordinate. For variation, use …\nEnd circle center y coordinate.\nEnd circle center y coordinate. For variation, use …\nRotation point (p₂) y coordinate.\nRotation point (p₂) y coordinate. For variation, use …\nMaximum y of clip box.\nMaximum y of clip box. For variation, use varIndexBase + 3.\nMaximum y of clip box.\nMinimum y of clip box.\nMinimum y of clip box. For variation, use varIndexBase + 1.\nMinimum y of clip box.\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\nAngle of skew in the direction of the y-axis, 180° in …\ny-component of transformed x-basis vector.\ny-component of transformed x-basis vector. For variation, …\ny-component of transformed y-basis vector.\ny-component of transformed y-basis vector. For variation, …\nCPAL (Color Record) record\nCPAL (Color Palette Table) table\nThe PaletteType flags.\nBit 1: palette is appropriate to use when displaying the …\nBit 0: palette is appropriate to use when displaying the …\nReturns the set containing all flags.\nAlpha value (B3).\nAlpha value (B3).\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nBlue value (B0).\nBlue value (B0).\nIndex of each palette’s first color record in the …\nAttempt to resolve <code>color_records_array_offset</code>.\nOffset from the beginning of CPAL table to the first …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nGreen value (B1).\nGreen value (B1).\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nTotal number of color records, combined for all palettes.\nNumber of palette entries in each palette.\nNumber of palettes in the table.\nAttempt to resolve <code>palette_entry_labels_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nAttempt to resolve <code>palette_labels_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nAttempt to resolve <code>palette_types_array_offset</code>.\nOffset from the beginning of CPAL table to the Palette …\nRed value (B2).\nRed value (B2).\nRemoves the specified flags in-place.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nTable version number (=0).\nThe cvar table.\nDelta for an entry in the control value table.\nVariation data specialized for the CVT variation table.\nApplies a tuple scalar to this delta.\nAttempt to resolve <code>data_offset</code>.\nOffset from the start of the ‘cvar’ table to the …\nComputes the accumulated deltas for the given set of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe index in the CVT.\nA packed field. The high 4 bits are flags, and the low 12 …\nArray of tuple variation headers.\nThe delta to apply to the value in the CVT.\nReturns the variation data containing the tuples and …\nMajor/minor version number of the CVT variations table — …\nBit 0: Cannot be resigned\nDSIG (Digital Signature Table) table\nPermission flags\nSignature Block Format 1\nSignature Record\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nPermission flags\nFormat of the signature\nFormat of the signature\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no flags are currently stored.\nLength of signature in bytes\nLength of signature in bytes\nReturns the complement of this set of flags.\nNumber of signatures in the table\nRemoves the specified flags in-place.\nPKCS#7 packet\nThe signature block enclosed within this record.\nOffset to the signature block from the beginning of the …\nOffset to the signature block from the beginning of the …\nLength (in bytes) of the PKCS#7 packet in the signature …\nArray of signature records\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nVersion number of the DSIG table (0x00000001)\nThe Embedded Bitmap Data table\nMajor version of the EBDT table, = 2.\nMinor version of EBDT table, = 0.\nThe Embedded Bitmap Location table\nBitmapSize records array.\nMajor version of the EBLC table, = 2.\nMinor version of EBLC table, = 0.\nNumber of BitmapSize records.\nThe feature name table.\nType, flags and names for a feature.\nAssociates a setting with a name identifier.\nReturns the index of the default setting for the feature.\nFeature type.\nFeature type.\nFlags associated with the feature type.\nFlags associated with the feature type.\nThe number of entries in the feature name array.\nReturns the name for the given feature code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the feature settings are mutually …\nThe number of records in the setting name array.\nThe number of records in the setting name array.\nThe name table index for the feature’s name.\nThe name table index for the setting’s name.\nThe name table index for the feature’s name.\nThe name table index for the setting’s name.\nThe feature name array, sorted by feature type.\nA constructor that requires additional arguments.\nThe setting.\nThe setting.\nOffset in bytes from the beginning of this table to this …\nOffset in bytes from the beginning of this table to this …\nOffset in bytes from the beginning of this table to this …\nList of setting names for a feature.\nVersion number of the feature name table (0x00010000 for …\nShim table to handle combined axis and instance arrays.\nThe fvar (Font Variations) table\nThe InstanceRecord\nThe VariationAxisRecord\nReturns the array of variation axis records.\nVariation axis record array.\nThe number of variation axes in the font (the number of …\nAttempt to resolve <code>axis_instance_arrays_offset</code>.\nOffset in bytes from the beginning of the table to the …\nThe name ID for entries in the ‘name’ table that …\nThe name ID for entries in the ‘name’ table that …\nThe size in bytes of each VariationAxisRecord — set to …\nTag identifying the design variation for the axis.\nTag identifying the design variation for the axis.\nThe coordinates array for this instance.\nThe default coordinate value for the axis.\nThe default coordinate value for the axis.\nAxis qualifiers — see details below.\nAxis qualifiers — see details below.\nReserved for future use — set to 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe number of named instances defined in the font (the …\nThe size in bytes of each InstanceRecord — set to either …\nReturns the array of instance records.\nInstance record array.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum coordinate value for the axis.\nThe maximum coordinate value for the axis.\nThe minimum coordinate value for the axis.\nThe minimum coordinate value for the axis.\nReturns a normalized coordinate for the given value.\nOptional. The name ID for entries in the ‘name’ table …\nA constructor that requires additional arguments.\nParse an instance record with a known axis_count and …\nThe name ID for entries in the ‘name’ table that …\nConverts user space coordinates provided by an unordered …\nMajor version number of the font variations table — set …\nUse grayscale rendering\nUse gridfitting\nUse gridfitting with ClearType symmetric smoothing Only …\nUse smoothing along multiple axes with ClearType® Only …\ngasp\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nSorted by ppem\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nNumber of records to follow\nFlags describing desired rasterizer behavior.\nFlags describing desired rasterizer behavior.\nUpper limit of range, in PPEM\nUpper limit of range, in PPEM\nRemoves the specified flags in-place.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nVersion number (set to 1)\nAttachment Point List Table\nPart of AttachList\nCaret Value Tables\nCaretValue Format 1\nCaretValue Format 2\nCaretValue Format 3\nGDEF 1.0\nUsed in the Glyph Class Definition Table\nLigature Caret List Table\nLigature Glyph Table\nMark Glyph Sets Table\nAttempt to resolve <code>attach_list_offset</code>.\nOffset to attachment point list table, from beginning of …\nArray of offsets to AttachPoint tables-from beginning of …\nA dynamically resolving wrapper for <code>attach_point_offsets</code>.\nNumber of CaretValue tables for this ligature (components …\nFormat identifier: format = 1\nFormat identifier: format = 2\nFormat identifier-format = 3\nFormat identifier: format = 1\nArray of offsets to CaretValue tables, from beginning of …\nContour point index on glyph\nA dynamically resolving wrapper for <code>caret_value_offsets</code>.\nX or Y value, in design units\nX or Y value, in design units\nAttempt to resolve <code>coverage_offset</code>.\nAttempt to resolve <code>coverage_offset</code>.\nOffset to Coverage table - from beginning of AttachList …\nOffset to Coverage table - from beginning of LigCaretList …\nArray of offsets to mark glyph set coverage tables, from …\nA dynamically resolving wrapper for <code>coverage_offsets</code>.\nAttempt to resolve <code>device_offset</code>.\nOffset to Device table (non-variable font) / Variation …\nFormat identifier == 1\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to resolve <code>glyph_class_def_offset</code>.\nOffset to class definition table for glyph type, from …\nNumber of glyphs with attachment points\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to resolve <code>item_var_store_offset</code>.\nOffset to the Item Variation Store table, from beginning of\nAttempt to resolve <code>lig_caret_list_offset</code>.\nOffset to ligature caret list table, from beginning of GDEF\nNumber of ligature glyphs\nArray of offsets to LigGlyph tables, from beginning of …\nA dynamically resolving wrapper for <code>lig_glyph_offsets</code>.\nAttempt to resolve <code>mark_attach_class_def_offset</code>.\nOffset to class definition table for mark attachment type, …\nNumber of mark glyph sets defined\nAttempt to resolve <code>mark_glyph_sets_def_offset</code>.\nOffset to the table of mark glyph set definitions, from …\nCreate from a raw scalar.\nReturn the <code>FontData</code> used to resolve offsets for this table.\nNumber of attachment points on this glyph\nArray of contour point indices -in increasing numerical …\nThe major/minor version of the GDEF table\nBit 1: If this is set, the arguments are signed xy values, …\nBit 0: If this is set, the arguments are 16-bit (uint16 or …\nAnchor position for a composite component.\nBit 7: Off-curve point belongs to a cubic-Bezier segment\nA reference to another glyph. Part of CompositeGlyph.\nCompositeGlyph\nFlags used in CompositeGlyph\nPoint with an associated on-curve flag in a simple glyph.\nThe glyf (Glyph Data) table\nSimple or composite glyph.\nMarker for points that have an explicit delta in a glyph …\nBit 5: Indicates at least one more glyph after this one.\nMarker for points where the distance to next point is very …\nBit 0: If set, the point is on the curve; otherwise, it is …\nBit 10: If set, the components of the compound glyph …\nBit 6: If set, contours in the glyph description may …\nTrait for types that are usable for TrueType point …\nFlags describing the properties of a point.\nMarker bits for point flags that are set during variation …\nBit 3: If set, the next byte (read as unsigned) specifies …\nBit 2: If set and ARGS_ARE_XY_VALUES is also set, the xy …\nBit 11: The composite is designed to have the component …\nThe Glyph Header\nFlags used in SimpleGlyph\nMarker that signifies that the both coordinates of a point …\nMarker that signifies that the x coordinate of a point has …\nMarker that signifies that the y coordinate of a point has …\nTransform for a composite component.\nBit 12: The composite is designed not to have the component\nBit 9: If set, this forces the aw and lsb (and rsb) for the\nMarks this point as a candidate for weak interpolation.\nBit 6: The x direction will use a different scale from the …\nBit 3: This indicates that there is a simple scale for the …\nBit 7: There is a 2 by 2 transformation that will be used …\nBit 8: Following the last component are instructions for …\nBit 4: This flag has two meanings, depending on how the …\nBit 1: If set, the corresponding x-coordinate is 1 byte …\nBit 5: This flag has two meanings, depending on how the …\nBit 2: If set, the corresponding y-coordinate is 1 byte …\nReturns the set containing all flags.\nReturns the set containing all flags.\nAnchor for component placement.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nTrueType hinting bytecode.\nClears the given marker for this point.\nDisables the on curve flag.\ncomponent flag glyph index of component\nReturns an iterator that yields the glyph identifier and …\nReturns an iterator over the components of the composite …\nCompute the flags that describe this transform\nCompute the flags that describe this anchor\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the component count and TrueType interpreter …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nArray of point indices for the last point of each contour, …\nComponent flags.\nFlips the state of the on curve flag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nCreates a point flag from the given bits. These are …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nGlyph identifier.\nthe raw data for flags &amp; x/y coordinates\nReturns true if the given marker is set for this point.\nReturns true if the contours in the simple glyph may …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nTotal number of bytes for instructions. If …\nArray of instruction byte code for the glyph.\nReturns the TrueType interpreter instructions.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns true if this is an off curve cubic point.\nReturns true if this is an off curve quadratic point.")