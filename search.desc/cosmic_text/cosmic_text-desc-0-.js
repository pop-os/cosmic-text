searchState.loadedDescShard("cosmic_text", 0, "COSMIC Text\nAll small caps (uppercase and lowercase to small capitals)\nAn action to perform on an <code>Editor</code>\nAdvanced text shaping and font fallback.\nWhether to associate cursors placed at a boundary between …\nAlign or justify\nRepresents an angle in degrees or radians.\nText attributes\nList of text attributes to apply to a line\nAn owned version of <code>Attrs</code>\nBlack weight (900), the thickest value.\nBold weight (700).\nDelete text behind cursor\nBasic shaping with no font fallback.\nAn iterator over the paragraphs in the input text. It is …\nA value borrowed together with an <code>FontSystem</code>\nA buffer of text that is shaped and laid out\nMove cursor to the end of the document\nA line (or paragraph) of text that is shaped and laid out\nMove cursor to the start of the document\nContextual alternates (glyph substitutions based on …\nContextual ligatures (context-dependent ligatures)\nKey for building a glyph cache\nFlags that change rendering\nMetrics, but implementing Eq and Hash using u32 …\nHelper for caching a value when the value is optionally …\nA set of change items grouped into one logical change\nA unique change to an editor\nMouse click at specified position\nCloses a subpath, connecting the final point to the …\nText color\n32-bit RGBA bitmap.\nPath command.\nUse <code>\\r</code> for line ending (many legacy systems)\nUse <code>\\r\\n</code> for line ending (Windows-style)\nGlyphs in cursive fonts generally use a more informal …\nCurrent cursor location\nA cubic bezier curve from the previous point to the final …\nDisable hinting\nDiscretionary ligatures (optional stylistic ligatures)\nDelete text in front of cursor\nMouse double click at specified position\nMove cursor down\nMouse drag to specified position\nExtra-bold weight (800).\nExtra light weight (200).\nA trait to allow easy replacements of <code>Editor</code>, like …\nA wrapper of [<code>Buffer</code>] for easy editing\nMove cursor to end of line\nCreate new line\nEscape, clears selection\nSkew by 14 degrees to synthesize italic\nThe <code>Fallback</code> trait allows for configurable font fallback …\nA font family.\nAn owned version of <code>Family</code>\nFantasy fonts are primarily decorative or expressive fonts …\nA 4-byte <code>OpenType</code> feature tag identifier\nA font\nFont-specific part of <code>Attrs</code> to be used for matching\nAccess to the system fonts.\nWraps at a glyph level\nMove cursor to specific line\nMove cursor to start of line\nIdentity matrix.\nInsert character at cursor\nA form that is generally cursive in nature.\nKerning adjusts spacing between specific character pairs\nLight weight (300).\nThe position of a cursor within a [<code>Buffer</code>].\nApply specific <code>LayoutCursor</code>\nA laid out glyph\nA line of laid out glyphs\nA line of visible text for rendering\nAn iterator of visible text lines, see <code>LayoutRun</code>\nMove cursor left\nMove cursor to next word boundary to the left\nA wrapper for letter spacing to get around that f32 doesn…\nUse <code>\\n</code> for line ending (POSIX-style)\nUse <code>\\n\\r</code> for line ending (some legacy systems)\nSelect by lines\nLine ending\nIterator over lines terminated by <code>LineEnding</code>\nA straight line from the previous point to the specified …\nMedium weight (500, higher than normal).\n8-bit alpha mask.\nMetrics of text\nThe sole criterion of a monospace font is that all glyphs …\nA motion to perform on a <code>Cursor</code>\nMove the cursor with some motion\nBegins a new subpath at the specified point.\nNormal (400).\nThe name of a font family of choice.\nMove cursor to next character (<code>Self::Right</code> in LTR, …\nMove cursor to next word boundary\nNo selection\nNo wrapping\nNo line ending\nA face that is neither italic not obliqued.\nNormal selection\nA typically-sloped version of the regular face.\nRender as a pixel font\nMove cursor down one page\nMove cursor up one page\nMove cursor to end of paragraph\nMove cursor to start of paragraph\nDescribes the offset and dimensions of a rendered mask.\nA platform-specific font fallback list, for Unix.\nMove cursor to previous character (<code>Self::Left</code> in LTR, …\nMove cursor to previous word boundary\nA quadratic curve from the previous point to the final …\nMove cursor right\nMove cursor to next word boundary to the right\nSemibold weight (600).\nSmall caps (lowercase to small capitals)\nStandard ligatures (fi, fl, etc.)\nStylistic Set 1 (font-specific alternate glyphs)\nStylistic Set 2 (font-specific alternate glyphs)\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nScroll position in [<code>Buffer</code>]\nScroll specified number of pixels\nSelection mode\nSerif fonts represent the formal text style for a script.\nA set of buffers containing allocations for shaped text.\nA shaped glyph\nA shaped line (or paragraph)\nA helper structure for caching shape runs.\nKey for caching shape runs.\nA shaped span (for bidirectional processing)\nA shaped word (for word wrapping)\nThe shaping strategy of some text.\nMove cursor to start of line, skipping whitespace\nA face width.\nAllows italic or oblique faces to be selected.\nBinning of subpixel position for cache optimization\n32-bit RGBA subpixel mask.\nCache for rasterizing with the swash scaler\nContent of a scaled glyph image.\nScaled glyph image.\nThin weight (100), the thinnest value.\nTwo dimensional transformation matrix.\nMouse triple click at specified position\nMove cursor up\nMove cursor up or down by a number of pixels\nSpecifies the weight of glyphs in the font, their degree …\nSelect by words\nWraps at the word level\nWraps at the word level, or fallback to glyph level if a …\nWrapping mode\nAngle of zero degrees.\nGet the alpha component\nPerform an Action on the editor\nPerform an Action on the editor\nAdd an attribute span, removes any previous matching parts …\nWhether to associate the cursor with the run before it or …\nGet the Text alignment\nGet a flags value with all known bits set.\nAppend line at end of this line\nApply a change\nGet an array over all of the components, in <code>[r, g, b, a]</code> …\nGet a tuple over all of the attributes, in <code>(r, g, b, a)</code> …\nGet the line ending as a str\nGet attributes list\nGet the current automatic indentation setting\nGet the blue component\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nMutably borrows <code>self</code> together with an <code>FontSystem</code> for more …\nMutably borrows <code>self</code> together with an <code>FontSystem</code> for more …\nMutably borrows the buffer together with an <code>FontSystem</code> for …\nGet the internal <code>BufferRef</code>\nGet the internal <code>BufferRef</code>\nSee <code>Self::new</code>.\nSee <code>Self::new</code>.\nSee <code>Self::new</code>.\nCache key, see <code>CacheKey</code>\nSet <code>CacheKeyFlags</code>\n<code>CacheKeyFlags</code>\nResets the image to a default state.\nClear the current attribute spans\nSet Color\nOptional color override\nFallbacks to use after any script specific fallbacks\nCheck if this set of attributes can be shaped with another\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGiven an origin, offset and bounding box, computes the …\nWhether all set bits in a source flags value are also set …\nContent of the image.\nCopy selection\nGet the current cursor\nApply a <code>Motion</code> to a <code>Cursor</code>\nApply a <code>Motion</code> to a <code>Cursor</code>\nGet X and Y position of the top left corner of the cursor\nRaw image data.\nGet the database.\nGet a mutable reference to the database.\nGet the default Attrs\nDelete text starting at start Cursor and ending at end …\nDelete selection, adjusting cursor and returning true if …\nReturns the determinant of the transform.\nThe intersection of a source flags value with the …\nDisable a feature (set to 0)\nDraw the buffer\nDraw the editor\nDraw the buffer\nGet a flags value with all bits unset.\nEnable a feature (set to 1)\nCursor indicating end of change\nEnd index of cluster in original line\nGet line ending\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nSet Family\nGet completed change\n<code>CacheKeyFlags</code>\nSet <code>FontFeatures</code>\nFont ID\nFont id of the glyph\nFont size in pixels\nFont size of the glyph\n<code>f32</code> bits of font size\nFont weight\nFont weight of the glyph\nFallbacks to never use\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nCreates a new angle from degrees.\nCreates a new angle from gradians.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates a new angle from radians.\nCreates a new angle from turns.\nGet the green component\nGets the value if in state <code>Self::Used</code>.\nGet cache item, updating age if found\nGet a font by its ID and weight.\nCreate a swash Image from a cache key, caching results\nCreate a swash Image from a cache key, without caching …\nGets the value mutably if in state <code>Self::Used</code>.\nCreates outline commands\nCreates outline commands, without caching results\nGet the attribute span for an index\nIndex of [<code>LayoutGlyph</code>] in [<code>LayoutLine::glyphs</code>]\nGlyph ID\nFont id of the glyph\nThe array of layout glyphs to draw\nGlyphs in line\nHeight in pixels.\nReturn the pixel span <code>Some((x_left, x_width))</code> of the …\nConvert x, y position to Cursor (hit detection)\nThe horizontal position of scroll in fractional pixels\nFirst-byte-index of glyph at cursor (will insert behind …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert cache item with current age\nInsert if true, delete if false\nInsert text at specified cursor with specified <code>attrs_list</code>\nInsert a string at the current cursor or replacing the …\nInsert a string at the current cursor or replacing the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume this <code>FontSystem</code> and return the locale and database.\nConsume this line, returning only its text contents as a …\nReturns the inverse of the transform, if any.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nChecks if the value is empty or unused.\nChecks if the value is used (i.e. cached for access).\nChange items grouped into one change\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLayout line, will cache results\nIndex of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]\nConvert a <code>Cursor</code> to a <code>LayoutCursor</code>\nGet line layout cache\nGet the visible layout runs for rendering and other tasks\nHorizontal offset with respect to the origin specified …\nSet letter spacing (tracking) in EM\nLetter spacing (tracking) in EM\nLetter spacing (tracking) in EM\nUnicode <code>BiDi</code> embedding level, character is left-to-right …\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]. This will be …\nY offset to next line\nLine height in pixels\nLine height of the glyph, will override buffer setting\nMaximum line height of any spans in line\nThe index of the original text line\nLay out the provided line index and return the result\nLay out the provided line index and return the result\nShape the provided line index and return the result\nShape the provided line index and return the result\nY offset to top of line\nWidth of line\nY offset to baseline of line\n<code>BufferLine</code>s (or paragraphs) of text in the buffer\nGet the locale.\nCheck if font matches\nMaximum ascent of the glyphs in line\nMaximum descent of the glyphs in line\nSet metadata\nGet line metadata. This will be None if …\nMetadata from <code>Attrs</code>\nSet <code>Metrics</code>, overriding values in buffer\nGet the current <code>Metrics</code>\nGet the current <code>monospace_width</code>\nCreate a new <code>FontSystem</code>, that allows access to any …\nCreate a new swash cache\nCreates a new transform.\nCreate a new set of attributes with sane defaults\nCreate a new attributes list with a set of default Attrs\nCreate an iterator with optimized paragraph detection. …\nCreate metrics with given font size and line height\nCreate a new <code>Buffer</code> with the provided <code>FontSystem</code> and …\nCreate a new line with the given text and attributes list …\nCreate a new cursor\nCreate a new <code>LayoutCursor</code>\nCreate a new scroll\nCreate a new <code>Editor</code> with the provided [<code>Buffer</code>]\nCreate an iterator of lines in a string slice\nShape a word into a set of glyphs.\nShape a span into a set of words.\nShape a line into a set of spans, using a scratch buffer. …\nCreates a new empty scaled image.\nCreate an empty <code>Buffer</code> with the provided <code>Metrics</code>. This is …\nCreate a new cursor, specifying the affinity\nCreate a new <code>FontSystem</code> with a pre-specified set of fonts.\nCreate a new <code>FontSystem</code> with a pre-specified locale and …\nCreate a new <code>FontSystem</code> with a pre-specified locale, font …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nOffset and size of the image.\nReturns a new transform that represents a rotation …\nReturns a new transform that represents a scale followed …\nReturns a new transform that represents a translation …\nGet the red component\nGet the <code>Buffer</code> redraw flag\nGet the <code>Buffer</code> redraw flag\nTrue if a redraw is needed\nCreate metrics with given font size and calculate line …\nThe intersection of a source flags value with the …\nReset shaping, layout, and metadata caches\nReset only layout cache\nResets the current line with new internal values.\nReset shaping and layout caches\nCreate new color with red, green, and blue components\nCreate new color with red, green, blue, and alpha …\nCreates a rotation transform.\nCreates a rotation transform around a point.\nTrue if the original paragraph direction is RTL\nCreates a scale transform.\nScale font size and line height\nFallbacks to use per script\nGet the current scroll location\nGet the current selection position\nGet the bounds of the current selection\nGet the bounds of the current selection\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the text alignment\nSet attributes list\nEnable or disable automatic indentation\nSet the current cursor\nSet line ending\nSet line metadata. This is stored until the next line reset\nSet the current <code>Metrics</code>\nSet the current <code>Metrics</code>\nSet the current <code>Metrics</code> and buffer dimensions at the same …\nSet the current <code>Metrics</code> and buffer dimensions at the same …\nSet monospace width monospace glyphs should be resized to …\nSet the <code>Buffer</code> redraw flag\nSet the <code>Buffer</code> redraw flag\nSet redraw needed flag\nSet text of buffer, using an iterator of styled spans …\nSet text of buffer, using an iterator of styled spans …\nSet the current scroll location\nSet the current selection position\nSet the current buffer dimensions\nSet the current buffer dimensions\nSet the current tab width. A <code>tab_width</code> of 0 is not …\nSet tab width (number of spaces between tab stops)\nSet the current tab width. A <code>tab_width</code> of 0 is not …\nSet tab width (number of spaces between tab stops)\nSet text of buffer, using provided attributes for each …\nSet text and attributes list\nSet text of buffer, using provided attributes for each …\nMoves the value from <code>Self::Used</code> to <code>Self::Unused</code>.\nSets the value to <code>Self::Used</code>.\nSet the current <code>Wrap</code>\nSet the current <code>Wrap</code>\nShape line, will cache results\nShape lines until scroll, after adjusting scroll if the …\nShape lines until scroll, after adjusting scroll if the …\nGet line shaping cache\nShape lines until cursor, also scrolling to include cursor …\nShape lines until cursor, also scrolling to include cursor …\nShape lines until scroll\nShape lines until scroll\nGet the current buffer dimensions (width, height)\nCreates a skew transform.\nSource of the image.\nGet the current attribute spans\nGet an iterator over the current attribute spans\nSplit attributes list at an offset\nSplit off new line at index\nCursor indicating start of change\nStart index of cluster in original line\nStart collecting change\nSet Stretch\nSet Style\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet the current tab width\nGet the current <code>tab_width</code>\nTakes the buffered value if in state <code>Self::Unused</code>.\nTakes the cached value if in state <code>Self::Used</code>.\nGet current text\nThe original text line\nText to be inserted or deleted\nReturns a new transform that represents the application of …\nReturns a new transform that represents this transform …\nReturns a new transform that represents this transform …\nReturns a new transform that represents this transform …\nReturns the angle in degrees.\nReturns a numeric representation of a width.\nReturns the angle in radians.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nVertical offset with respect to the origin specified when …\nReturns the result of a transformation matrix applied to …\nReturns the result of applying this transform to a point.\nReturns the result of applying this transform to a vector.\nCreates a translation transform.\nRemove anything in the cache with an age older than …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the associated verb for the command.\nPixel offset from the start of the [<code>BufferLine</code>]. This will …\nWidth of hitbox\nWidth of the line\nSet Weight\nGet the width of the <code>ShapeGlyph</code> in pixels, either using …\nGet the width of the <code>ShapeWord</code> in pixels, using the …\nWidth in pixels.\nGet the internal <code>Buffer</code>\nGet the internal <code>Buffer</code>\nGet the internal <code>Buffer</code>, mutably\nGet the internal <code>Buffer</code>, mutably\nGet the internal <code>Buffer</code>, mutably\nEnumerate pixels in an Image, use <code>with_image</code> for better …\nGet the current <code>Wrap</code>\nX offset of hitbox\nInteger component of X offset in line\nBinning of fractional X offset\nX offset in line\nY offset of hitbox\nInteger component of Y offset in line\nBinning of fractional Y offset\nY offset in line\nThe <code>Fallback</code> trait allows for configurable font fallback …\nA platform-specific font fallback list, for Unix.\nFallbacks to use after any script specific fallbacks\nFallbacks to never use\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFallbacks to use per script")