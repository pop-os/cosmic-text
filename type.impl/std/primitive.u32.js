(function() {
    var type_impls = Object.fromEntries([["fontconfig_parser",[]],["swash",[]],["ttf_parser",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#75-82\">Source</a><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ttf_parser/trait.FromData.html\" title=\"trait ttf_parser::FromData\">FromData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#76\">Source</a><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#79-81\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ttf_parser/trait.FromData.html#tymethod.parse\" class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","ttf_parser::ggg::layout_table::VariationIndex"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[24,13,2013]}